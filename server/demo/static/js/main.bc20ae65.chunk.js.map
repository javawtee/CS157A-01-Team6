{"version":3,"sources":["components/SignIn.js","utils/validators.js","components/ForgotPassword.js","components/PasswordField.js","components/SignUp.js","components/Dashboard/FlightTable.js","pages/Dashboard.js","components/BookingDetail/BookingDetailSummary.js","components/BookingDetail/BookingDetailPassengers.js","components/UserProfile/UserInfo.js","components/UserProfile/UpdatePassword.js","utils/converter.js","models/flightTimeOptions.js","models/flightClassOptions.js","models/sortByOptions.js","components/UserProfile/UserPreference.js","components/Autocomplete.js","components/FlightSearch/SearchField.js","utils/datetime.js","components/FlightSummary.js","components/FlightSearch/ResultHeader.js","components/FlightSearch/ResultItem.js","components/FlightSearch/FlightSearchResults.js","utils/generators.js","models/IDTypeOptions.js","models/passenger.js","components/FlightReservation/ResvPassenger.js","components/FlightReservation/FlightReservationMain.js","pages/Booking.js","models/routes.js","pages/Welcome.js","pages/BookingDetail.js","pages/UserProfile.js","pages/RecoveryPassword.js","Test/DevTest.js","pages/P404.js","components/NavBar.js","components/AuthenticatedRoute.js","redux/types.js","redux/reducers/background.js","redux/reducers/user.js","sessions/bookingSession.js","sessions/searchSession.js","sessions/ticketSession.js","redux/reducers/booking.js","redux/reducers/airport.js","redux/rootReducer.js","apis/urls.js","apis/services.js","redux/sagas/backgroundSaga.js","redux/sagas/userSaga.js","apis/builder.js","redux/sagas/bookingSaga.js","redux/sagas/airportSaga.js","redux/rootSaga.js","redux/store.js","serviceWorker.js","index.js","App.js"],"names":["initialState","userid","password","validuserid","validpassword","SignIn","props","handleOnFocus","e","target","id","setState","handleChange","removedWarnFrom","name","value","clearForm","submitSignIn","preventDefault","state","length","signin","className","onSubmit","this","uk-icon","onChange","placeholder","type","onFocus","href","uk-toggle","onClick","style","verticalAlign","Component","connect","authenticated","background","dispatch","email","payload","validateEmailFormat","test","validateStrongPassword","zxcvbn","score","valid","ForgotPassword","handleSubmit","UIkit","util","on","document","zIndex","uk-modal","uk-close","autoComplete","color","display","PasswordField","passwordId","passwordValue","confirmPasswordId","confirmPasswordValue","isValidPassword","isValidConfirmPassword","Fragment","htmlFor","marginTop","firstName","middleInitial","lastName","signupEmail","confirmEmail","signupPassword","confirmPassword","validfirstName","validmiddleInitial","validlastName","validsignupEmail","validconfirmEmail","validsignupPassword","validconfirmPassword","duplicateEmail","SignUp","handleOnFocusPassword","isNaN","sendSignUpForm","response","modal","hide","dialog","uk-grid","maxLength","callback","FlightTable","populateTableRows","data","map","row","key","bookingNumber","departFrom","departTime","arriveTo","arriveTime","format","Date","caption","Dashboard","componentDidMount","getFlights","reservations","pastflights","flights","filter","flight","isAfter","sort","p","c","compareAsc","includes","compareDesc","uk-height-viewport","backgroundColor","user","FlightSummary","DEPART_FROM","ARRIVE_TO","DEPART_TIME","ARRIVE_TIME","BookingDetailPassengers","useDispatch","bookingPassengers","useSelector","useState","undefined","passengers","setPassengers","useEffect","forEach","passenger","isChecked","handleCheck","Number","checked","isAvailable","bookingStatus","textDecoration","uk-tooltip","disabled","passengerId","IDType","confirmationEmail","cancellations","path","location","pathname","originalList","UserInfo","info","joinedDate","UpdatePassword","ID","currentPassword","newPassword","confirmNewPassword","inputs","setInputs","valids","setValids","validcurrentPassword","validPassword","converter","optionTextToId","options","text","find","optionIdToText","flightTimeOptions","flightClassOptions","sortByOptions","UserPreference","preference","flightClass","maxPrice","sortBy","DEFAULT_MAX_PRICE","fromOption","toOption","flightTimeInputs","setFlightTimeInputs","flightClassInput","setFlightClassInput","maxPriceInput","setMaxPrice","sortByInput","setSortByInput","handleSelectFlightTimeOption","generateOptions","min","max","step","departTimeId","arriveTimeId","flightClassId","sortById","Autocomplete","getSuggestionParentStyle","input","closeSuggestion","position","border","top","left","right","maxHeight","overflowY","overflowX","getSuggestionItemStyle","padding","cursor","borderBottom","selectSuggestion","split","createSuggestions","suggestions","el","handleInputKeyDown","x","suggestionListRef","getElementsByTagName","keyCode","prevState","currentFocus","addActive","click","removeActive","classList","add","scrollTo","offsetTop","scrollTop","i","remove","setSuggestionListRef","element","toUpperCase","onKeyDown","ref","SearchField","airportList","airport","list","roundtrip","tripType","setTripType","flightFrom","flightTo","searchInputs","setSearchInputs","fromDate","toDate","dateInputs","setDateInputs","numOfPassengers","setNumOfPassengers","validSearchInputs","validateSearchInputs","handleTripType","handleOnChangeAutoComplete","handleOnFocusAutoComplete","validFlightFrom","validFlightTo","extractAirportCode","trim","substring","isRoundTrip","paddingTop","defaultChecked","dateFormat","minDate","selected","date","uk-accordion","getTimeIn12HourFormat","dateString","time","TYPE","SELECTED_DATE","FLIGHT_TIME","ResultHeader","SELECTED_SORT_BY_ID","booking","handleSelectSortBy","ResultItem","handleSelectFlight","handleChangeFlight","depTime","arrTime","economy","price","ecoPrice","seats","ecoSeats","business","busPrice","busSeats","economyAvailability","businessAvailability","depTimeString","arrTimeString","diffHours","differenceInHours","diffMinutes","getMinutes","calcDuration","margin","marginBottom","FlightSearchResults","breakdown","flightData","isNextReservation","getType","sorted","convertStringToDate","string","parse","selectedDate","prev","curr","toLowerCase","selectedTicket","selectedFlightTimeId","selectedFlightTime","selectedSortById","isSelected","SELECTED_FLIGHT_TIME_ID","listOfData","ParentComponent","React","createElement","generateComponents","ticket","selectedFlight","IDTypeOptions","IDNumber","reservationEmail","sendConfirmation","validIDNumber","validreservationEmail","ResvPassenger","form","onRemove","setSendConfirmation","FlightReservationMain","getPassengerFormView","passengerForm","handleChangePassengerForm","handleRemovePassengerForm","handleAddNewPassengerForm","seatsLeft","alert","newPassengers","push","getPassengerForm","splice","seenID","notification","status","timeout","getFlightClass","departFlight","children","selectedDepartFlight","returnFlight","selectedReturnFlight","finalizeBooking","SEATS_LEFT","Booking","getAirportList","searchResultsLoaded","currentStep","reloadSearchResults","getView","validForReservation","toReservation","flightDepartFrom","flightArriveTo","flightFromDate","flightToDate","departFlightTime","returnFlightTime","departFlights","returnFlights","departSeats","returnSeats","routes","requiredAuthentication","exact","HomePage","title","backgroundImage","fontWeight","component","navItemName","bookingDetails","computedMatch","params","detail","initialLoaded","setInitialLoaded","loaded","current","confirmed","confirmedRecoveryLink","link","match","setStatus","borderTop","fontSize","fontFamily","paddingLeft","NavBar","listOfRoutes","currentViewPath","uk-sticky","uk-navbar","route","content","AuthenticatedRoute","defaultAuthenticatedPath","rest","render","history","to","defaultValue","listOfOptions","opt","types","LOADING","LOADED","SIGNED_IN","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SIGN_UP","SIGN_IN","SET_USER","SIGN_OUT","SEND_RECOVERY_LINK","CONFIRM_RECOVERY_LINK","UPDATE_PASSWORD","UPDATE_PREFERENCE","USER_GET_FLIGHTS","GET_BOOKING_DETAIL","UPDATE_BOOKING","CANCEL_BOOKING","INIT_LOAD","APPLY_SEARCH","GO_SEARCH","IS_NEXT_RESERVATION","TO_RESERVATION","FINALIZE_BOOKING","GET_AIRPORTS","loading","getPreference","initial","setSession","session","sessionStorage","setItem","JSON","stringify","getSession","getItem","set","bookingSession","getAll","get","navNext","navTo","removeItem","createSession","searchSession","setMultiple","Object","keys","clearSession","ticketSession","combineReducers","action","newBookingPassengers","isReload","ticketList","userRoot","urls","App","load","signedin","signup","signout","recoverylink","confirmrecoverylink","updatepassword","updatepreference","getflights","getbookingdetail","cancelbooking","getlist","searchflight","finalizebooking","services","signedIn","axios","signUp","post","signIn","signOut","sendRecoveryLink","confirmRecoveryLink","updatePassword","updatePreference","put","getBookingDetail","cancelBooking","searchFlight","reqConditions","backgroundSaga","call","ret","clear","all","userSaga","message","retUser","retResult","endsWith","setTimeout","window","accordion","toggle","confirm","then","isAll","res","takeLatest","takeEvery","getSearchFlightCall","bookingSaga","requestCall","retPayload","console","log","airportSaga","code","city","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","thunk","store","createStore","rootReducer","compose","applyMiddleware","run","Boolean","hostname","ReactDOM","Route","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc20ae65.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst initialState = {\r\n    userid: \"\",\r\n    password: \"\",\r\n    validuserid: true,\r\n    validpassword: true,\r\n}\r\n\r\nexport class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = initialState\r\n    }\r\n\r\n    handleOnFocus = e => {\r\n        if (e.target.id === \"password\") this.setState({ password: \"\" })\r\n    }\r\n\r\n    handleChange = e => {\r\n        let removedWarnFrom = `valid${e.target.id}`\r\n        this.setState({ [e.target.name]: e.target.value, [removedWarnFrom]: true })\r\n    }\r\n\r\n    clearForm = e => this.setState(initialState)\r\n\r\n    submitSignIn = e => {\r\n        e.preventDefault()\r\n        let validuserid = this.state.userid.length > 0\r\n        let validpassword = this.state.password.length > 0\r\n        if (!validuserid || !validpassword) {\r\n            return this.setState({ validuserid, validpassword })\r\n        }\r\n\r\n        this.props.signin(this.state.userid, this.state.password)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"uk-card uk-card-default uk-card-body uk-width-1-2@l uk-align-center\">\r\n                <form id=\"signInForm\" className=\"uk-from-stacked\" onSubmit={this.submitSignIn}>\r\n                    <div className=\"uk-child-width-1-1\">\r\n                        <div className=\"uk-inline\">\r\n                            <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\r\n                            <input id=\"userid\" className={`uk-input ${this.state.validuserid ? \"\" : \"uk-form-danger\"}`}\r\n                                name=\"userid\" onChange={this.handleChange} value={this.state.userid} placeholder=\"Email\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"uk-margin uk-child-width-1-1\">\r\n                        <div className=\"uk-inline uk-form-password\">\r\n                            <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\r\n                            <input id=\"password\" className={`uk-input ${this.state.validpassword ? \"\" : \"uk-form-danger\"}`}\r\n                                type=\"password\" onFocus={this.handleOnFocus} onChange={this.handleChange}\r\n                                name=\"password\" value={this.state.password} placeholder=\"Password\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"uk-margin-small uk-child-width-1-1\">\r\n                        <button className=\"uk-button uk-button-primary uk-text-large\">Sign In</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"uk-margin-small uk-child-width-1-1 uk-text-right\">\r\n                    <a className=\"uk-text-small\" href=\"#forgotPassword\" uk-toggle=\"\"\r\n                        onClick={this.clearForm}>\r\n                        Forgot password?\r\n                    </a>\r\n                </div>\r\n                <div className=\"uk-margin-small uk-child-width-1-3 uk-text-right\">\r\n                    <span>Not a member?</span>\r\n                    <a className=\"uk-text-bold uk-margin-small-left\" style={{ verticalAlign: \"baseline\" }} href=\"#signUp\" uk-toggle=\"\"\r\n                        onClick={this.clearForm}>\r\n                        Enroll now\r\n                    </a>\r\n                </div>\r\n                <div className=\"uk-margin-small-bottom uk-card-footer\">\r\n                    <small>CS157A-01 - TEAM 6</small>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.background.authenticated\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signin: (email, password) => dispatch({ type: \"SIGN_IN\", payload: { email, password } })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import zxcvbn from 'zxcvbn'\r\n\r\nexport const validateEmailFormat = value => {\r\n    const emailRegex =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return emailRegex.test(value)\r\n}\r\n\r\nexport const validateStrongPassword = value => {\r\n    /*\r\n        0 # too guessable: risky password. (guesses < 10^3) \r\n        1 # very guessable: protection from throttled online attacks. (guesses < 10^6) \r\n        2 # somewhat guessable: protection from unthrottled online attacks. (guesses < 10^8) \r\n        3 # safely unguessable: moderate protection from offline slow-hash scenario. (guesses < 10^10) \r\n    */\r\n    return zxcvbn(value).score > 1;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UIkit from \"uikit\";\r\nimport { validateEmailFormat } from 'utils/validators';\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    valid: true\r\n}\r\n\r\nexport class ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = initialState\r\n    }\r\n\r\n    handleChange = e => this.setState({ [e.target.name]: e.target.value, valid: true })\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        let validEmail = this.state.email.length > 0 && validateEmailFormat(this.state.email)\r\n        if (!validEmail) {\r\n            return this.setState({ valid: false })\r\n        }\r\n\r\n        this.props.dispatch({ type: \"RECOVERY_LINK\", email: this.state.email })\r\n    }\r\n\r\n    render() {\r\n        UIkit.util.on(document, 'beforeshow', '#forgotPassword', () => this.setState(initialState))\r\n        return (\r\n            <div id=\"forgotPassword\" className=\"uk-flex-top\" style={{ zIndex: 5 }} uk-modal=\"bg-close: false\">\r\n                <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\r\n                    <button className=\"uk-modal-close-default\" uk-close=\"\"></button>\r\n                    <div className=\"uk-modal-header\">\r\n                        <h2 className=\"uk-modal-title\">Easy to reset your password</h2>\r\n                    </div>\r\n                    <div className=\"uk-modal-body\">\r\n                        <input id=\"email\" className={`uk-input ${this.state.valid ? '' : 'uk-form-danger'}`}\r\n                            type=\"text\" placeholder=\"Enter your registered email\"\r\n                            name=\"email\" onChange={this.handleChange} value={this.state.email}\r\n                            autoComplete=\"off\" />\r\n                        <small style={{ color: \"red\", display: this.state.valid ? \"none\" : \"\" }}>Please enter a valid email</small>\r\n                    </div>\r\n                    <div className=\"uk-modal-footer uk-text-right\">\r\n                        <button className=\"uk-button uk-button-primary uk-margin-small-right\" onClick={this.handleSubmit}>Submit</button>\r\n                        <button className=\"uk-button uk-button-danger\" uk-toggle=\"target: #forgotPassword\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, null)(ForgotPassword);\r\n","import React from 'react'\r\n\r\nexport default function PasswordField(props) {\r\n    let { passwordId, passwordValue,\r\n        confirmPasswordId, confirmPasswordValue,\r\n        isValidPassword, isValidConfirmPassword,\r\n        onChange, onFocus } = props\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"uk-width-1-1\">\r\n                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">Password</label>\r\n                <input id={passwordId} className={`uk-input ${isValidPassword ? '' : 'uk-form-danger'}`}\r\n                    type=\"password\" placeholder=\"Password\"\r\n                    name={passwordId} value={passwordValue}\r\n                    onChange={onChange} onFocus={onFocus} />\r\n                <small style={{ color: \"red\", display: isValidPassword ? \"none\" : \"\" }}>Password is too simple</small>\r\n                <p style={{ marginTop: '1px' }}>\r\n                    <small>* Password must have at least 6 characters</small><br />\r\n                    <small>* Password should contain at least a letter or a number</small><br />\r\n                    <small>* Password should contain a special character (!@#$%^&*)</small><br />\r\n                </p>\r\n            </div>\r\n            <div className=\"uk-width-1-1\">\r\n                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">Confirm password</label>\r\n                <input id={confirmPasswordId} className={`uk-input ${isValidConfirmPassword ? '' : 'uk-form-danger'}`}\r\n                    type=\"password\" placeholder=\"Confirm password\"\r\n                    name={confirmPasswordId} value={confirmPasswordValue}\r\n                    onChange={onChange} />\r\n                <small style={{ color: \"red\", display: isValidConfirmPassword ? \"none\" : \"\" }}>Password is not matching</small>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UIkit from \"uikit\"\r\nimport { validateEmailFormat, validateStrongPassword } from 'utils/validators'\r\nimport PasswordField from './PasswordField'\r\n\r\nconst initialState = {\r\n    firstName: '',\r\n    middleInitial: '',\r\n    lastName: '',\r\n    signupEmail: '',\r\n    confirmEmail: '',\r\n    signupPassword: '',\r\n    confirmPassword: '',\r\n    validfirstName: true,\r\n    validmiddleInitial: true,\r\n    validlastName: true,\r\n    validsignupEmail: true,\r\n    validconfirmEmail: true,\r\n    validsignupPassword: true,\r\n    validconfirmPassword: true,\r\n    duplicateEmail: false,\r\n}\r\n\r\nexport class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = initialState\r\n    }\r\n\r\n    handleChange = e => {\r\n        let removedWarnFrom = `valid${e.target.id}`\r\n        let duplicateEmail = e.target.name === 'signupEmail' ? false : this.state.duplicateEmail\r\n        this.setState({ [e.target.name]: e.target.value, [removedWarnFrom]: true, duplicateEmail })\r\n    }\r\n\r\n    handleOnFocusPassword = e => {\r\n        this.setState({ signupPassword: '', confirmPassword: '', validsignupPassword: true, validconfirmPassword: true })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        let { firstName, lastName, middleInitial, signupEmail, confirmEmail, signupPassword, confirmPassword } = this.state\r\n        let validfirstName = firstName.length > 1\r\n        let validlastName = lastName.length > 1\r\n        let validmiddleInitial = middleInitial.length === 0 || (middleInitial.length > 0 && isNaN(middleInitial))\r\n        let validsignupEmail = signupEmail.length > 0 && validateEmailFormat(signupEmail)\r\n        let validconfirmEmail = confirmEmail.length > 0 && confirmEmail === signupEmail\r\n        let validsignupPassword = signupPassword.length > 5 && validateStrongPassword(signupPassword)\r\n        let validconfirmPassword = confirmPassword.length > 5 && confirmPassword === signupPassword\r\n        if (!validfirstName || !validlastName || !validmiddleInitial || !validsignupEmail || !validconfirmEmail || !validsignupPassword || !validconfirmPassword) {\r\n            return this.setState({\r\n                validfirstName, validlastName, validmiddleInitial,\r\n                validsignupEmail, validconfirmEmail, validsignupPassword,\r\n                validconfirmPassword\r\n            })\r\n        }\r\n\r\n        this.props.sendSignUpForm({ firstName, lastName, middleInitial, signupEmail, signupPassword }, response => {\r\n            switch (response) {\r\n                case 'success':\r\n                    UIkit.modal('#signUp').hide()\r\n                    return UIkit.modal.dialog('<p class=\"uk-modal-body\" style=\"color:green;text-align:center;\">Successfully created an account</p>')\r\n                case 'duplicate':\r\n                    return this.setState({ duplicateEmail: true, confirmEmail: '' })\r\n                default:\r\n                    return\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        UIkit.util.on(document, 'beforeshow', '#signUp', () => this.setState(initialState))\r\n        return (\r\n            <div id=\"signUp\" className=\"uk-flex-top\" style={{ zIndex: 5 }} uk-modal=\"bg-close: false\">\r\n                <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\r\n                    <button className=\"uk-modal-close-default\" uk-close=\"\"></button>\r\n                    <div className=\"uk-modal-header\">\r\n                        <h2 className=\"uk-modal-title\">Create Account</h2>\r\n                    </div>\r\n                    <div className=\"uk-modal-body\">\r\n                        <form className=\"uk-form-stacked uk-grid-small\" uk-grid=\"\">\r\n                            <div className=\"uk-width-3-5 uk-width-4-5@m\">\r\n                                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">First Name</label>\r\n                                <input id=\"firstName\" className={`uk-input ${this.state.validfirstName ? \"\" : \"uk-form-danger\"}`}\r\n                                    type=\"text\" placeholder=\"john\"\r\n                                    name=\"firstName\" onChange={this.handleChange} value={this.state.firstName} />\r\n                                <small style={{ color: \"red\", display: this.state.validfirstName ? \"none\" : \"\" }}>First name is too short</small>\r\n                            </div>\r\n                            <div className=\"uk-width-2-5 uk-width-1-5@m\">\r\n                                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">Middle Initial</label>\r\n                                <input id=\"middleInitial\" className={`uk-input ${this.state.validmiddleInitial ? \"\" : \"uk-form-danger\"}`}\r\n                                    type=\"text\" maxLength={1}\r\n                                    name=\"middleInitial\" onChange={this.handleChange} value={this.state.middleInitial} />\r\n                                <small style={{ color: \"red\", display: this.state.validmiddleInitial ? \"none\" : \"\" }}>Alphabetics only</small>\r\n                            </div>\r\n                            <div className=\"uk-width-1-1\">\r\n                                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">Last Name</label>\r\n                                <input id=\"lastName\" className={`uk-input ${this.state.validlastName ? \"\" : \"uk-form-danger\"}`}\r\n                                    type=\"text\" placeholder=\"doe\"\r\n                                    name=\"lastName\" onChange={this.handleChange} value={this.state.lastName} />\r\n                                <small style={{ color: \"red\", display: this.state.validlastName ? \"none\" : \"\" }}>Last name is too short</small>\r\n                            </div>\r\n                            <div className=\"uk-width-1-1\">\r\n                                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">Email</label>\r\n                                <input id=\"signupEmail\"\r\n                                    className={`uk-input ${this.state.validsignupEmail ? '' : 'uk-form-danger'}\r\n                                                         ${this.state.duplicateEmail === false ? '' : 'uk-form-danger'}`}\r\n                                    type=\"text\" placeholder=\"john.doe@domain.com\"\r\n                                    name=\"signupEmail\" onChange={this.handleChange} value={this.state.signupEmail} />\r\n                                <small style={{ color: \"red\", display: this.state.validsignupEmail ? \"none\" : \"\" }}>Email is not valid</small>\r\n                                <small style={{ color: \"red\", display: !this.state.duplicateEmail ? \"none\" : \"\" }}>Email is already taken</small>\r\n                            </div>\r\n                            <div className=\"uk-width-1-1\">\r\n                                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">Confirm Email</label>\r\n                                <input id=\"confirmEmail\" className={`uk-input ${this.state.validconfirmEmail ? '' : 'uk-form-danger'}`} type=\"text\" placeholder=\"john.doe@domain.com\"\r\n                                    name=\"confirmEmail\" onChange={this.handleChange} value={this.state.confirmEmail} />\r\n                                <small style={{ color: \"red\", display: this.state.validconfirmEmail ? \"none\" : \"\" }}>Email is not matching</small>\r\n                            </div>\r\n                            <PasswordField\r\n                                passwordId=\"signupPassword\"\r\n                                passwordValue={this.state.signupPassword}\r\n                                isValidPassword={this.state.validsignupPassword}\r\n                                confirmPasswordId=\"confirmPassword\"\r\n                                confirmPasswordValue={this.state.confirmPassword}\r\n                                isValidConfirmPassword={this.state.validconfirmPassword}\r\n                                onChange={this.handleChange}\r\n                                onFocus={this.handleOnFocusPassword}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"uk-modal-footer uk-text-right\">\r\n                        <button className=\"uk-button uk-button-primary uk-margin-small-right\" onClick={this.handleSubmit}>Submit</button>\r\n                        <button className=\"uk-button uk-button-danger\" uk-toggle=\"target: #signUp\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendSignUpForm: (payload, callback) => dispatch({ type: \"SIGN_UP\", payload, callback })\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\nimport { format } from \"date-fns\";\r\n\r\nexport default function FlightTable(props) {\r\n    const populateTableRows = props.data.map((row, id) =>\r\n        <tr key={id}>\r\n            <td className=\"uk-table-link\">\r\n                <a href={`/booking=${row.bookingNumber}_${row.departFrom}|${row.departTime}_${row.arriveTo}|${row.arriveTime}`}>\r\n                    {row.bookingNumber}\r\n                </a>\r\n            </td>\r\n            <td>{row.departFrom}</td>\r\n            <td>{format(new Date(row.departTime), \"MM/dd/yyyy hh:mm a\")}</td>\r\n            <td>{row.arriveTo}</td>\r\n            <td>{format(new Date(row.arriveTime), \"MM/dd/yyyy hh:mm a\")}</td>\r\n        </tr>\r\n    )\r\n\r\n    return (\r\n        <div className=\"uk-overflow-auto uk-margin-small-bottom\">\r\n            <table className=\"uk-table uk-table-responsive uk-table-divider uk-text-small\">\r\n                <caption><h4>{props.caption}</h4></caption>\r\n                {\r\n                    props.data.length > 0 ?\r\n                        <React.Fragment>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"uk-width-small\">Booking Number</th>\r\n                                    <th className=\"uk-table-expand\">Depart From</th>\r\n                                    <th>Depart Time</th>\r\n                                    <th className=\"uk-table-expand\">Arrive To</th>\r\n                                    <th>Arrive Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {populateTableRows}\r\n                            </tbody>\r\n                        </React.Fragment>\r\n                        :\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"uk-table-expand\">Found no record</th>\r\n                            </tr>\r\n                        </thead>\r\n                }\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FlightTable from 'components/Dashboard/FlightTable';\r\nimport { isAfter, compareAsc, compareDesc } from \"date-fns\";\r\n\r\nclass Dashboard extends Component {\r\n    componentDidMount = () => {\r\n        this.props.getFlights()\r\n    }\r\n\r\n    render() {\r\n        const { flights } = this.props\r\n        var reservations, pastflights\r\n        if (flights) {\r\n            reservations =\r\n                flights.filter(flight => isAfter(new Date(flight.departTime), new Date()))\r\n                    .sort((p, c) => compareAsc(new Date(p.departTime), new Date(c.departTime)))\r\n            pastflights =\r\n                flights.filter(flight => !reservations.includes(flight))\r\n                    .sort((p, c) => compareDesc(new Date(p.arriveTime), new Date(c.arriveTime)))\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    flights &&\r\n                    <div className=\"uk-margin-top\" uk-height-viewport=\"expand: true\" style={{ backgroundColor: \"white\" }}>\r\n                        <FlightTable caption=\"Reservations\" data={reservations} />\r\n                        <FlightTable caption=\"Flight History\" data={pastflights} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    flights: state.user.flights\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getFlights: () => dispatch({ type: \"USER_GET_FLIGHTS\" })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import React from 'react';\r\nimport { format } from 'date-fns';\r\n\r\n// props:\r\n// DEPART_FROM: required\r\n// ARRIVE_TO: required\r\n// DEPART_TIME: required\r\n// ARRIVE_TIME: required\r\n\r\nexport default function FlightSummary(props) {\r\n    const { DEPART_FROM, ARRIVE_TO, DEPART_TIME, ARRIVE_TIME } = props\r\n    return (\r\n        <div className=\"uk-margin-auto@s uk-width-1-1\" uk-grid=\"\">\r\n            <div className=\"uk-width-1-1 uk-margin-remove-top\">\r\n                Departure<br />\r\n                <span className=\"uk-width-1-1 uk-text-bold uk-padding-remove\">\r\n                    {DEPART_FROM} <br />\r\n                    {format(new Date(DEPART_TIME), \"MM/dd/yyyy hh:mm a\")}\r\n                </span>\r\n            </div>\r\n            <span className=\"uk-width-1-1 uk-margin-remove-vertical\" uk-icon=\"icon: arrow-right\"></span>\r\n            <div className=\"uk-width-1-1 uk-margin-remove-top\">\r\n                Arrival<br />\r\n                <span className=\"uk-width-1-1 uk-text-bold uk-padding-remove\">\r\n                    {ARRIVE_TO} <br />\r\n                    {format(new Date(ARRIVE_TIME), \"MM/dd/yyyy hh:mm a\")}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function BookingDetailPassengers(props) {\r\n    const dispatch = useDispatch()\r\n    const { bookingPassengers } = useSelector(state => ({ bookingPassengers: state.user.bookingPassengers }))\r\n\r\n    const [passengers, setPassengers] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if (!passengers && bookingPassengers) {\r\n            bookingPassengers.forEach(passenger => passenger.isChecked = false)\r\n            setPassengers(bookingPassengers)\r\n        }\r\n    }, [passengers])\r\n\r\n    const populateRows = () => passengers.map((passenger, id) => {\r\n        let isAvailable = passenger.bookingStatus === \"Normal\"\r\n        return (\r\n            <tr key={id}\r\n                style={{ textDecoration: !isAvailable ? \"line-through\" : \"\" }}\r\n                uk-tooltip={!isAvailable ? \"Reservation for this passenger has been cancelled\" : \"\"}\r\n            >\r\n                <td className=\"uk-text-center\">\r\n                    <input id={id}\r\n                        className=\"uk-checkbox\" type=\"checkbox\"\r\n                        disabled={!isAvailable}\r\n                        onChange={handleCheck} />\r\n                </td>\r\n                <td>{passenger.passengerId}</td>\r\n                <td>{passenger.IDType}</td>\r\n                <td className=\"uk-text-capitalize\">{passenger.firstName}</td>\r\n                <td className=\"uk-text-capitalize\">{passenger.lastName}</td>\r\n                <td className=\"uk-text-capitalize\">{passenger.middleInitial}</td>\r\n                <td>{passenger.confirmationEmail || \"N/A\"}</td>\r\n            </tr >\r\n        )\r\n    })\r\n\r\n    const handleCheck = e => {\r\n        dispatch({\r\n            type: \"UPDATE_BOOKING\",\r\n            id: Number(e.target.id),\r\n            isChecked: e.target.checked\r\n        })\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        const cancellations = passengers.filter(passenger => passenger.isChecked)\r\n        dispatch({\r\n            type: \"CANCEL_BOOKING\",\r\n            path: props.location.pathname,\r\n            bookingNumber: props.bookingNumber,\r\n            cancellations,\r\n            originalList: passengers,\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"uk-width-1-1\">\r\n            {\r\n                passengers &&\r\n                <React.Fragment>\r\n                    <div className=\"uk-overflow-auto\">\r\n                        <table className=\"uk-table uk-table-hover uk-table-divider\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"uk-table-shrink uk-text-center\"></th>\r\n                                    <th className=\"uk-table-shrink\">Passenger ID</th>\r\n                                    <th className=\"uk-table-shrink\">ID Type</th>\r\n                                    <th className=\"uk-table-shrink\">First Name</th>\r\n                                    <th className=\"uk-table-shrink\">Last Name</th>\r\n                                    <th className=\"uk-table-shrink\">Middle</th>\r\n                                    <th className=\"uk-width-small\">Send confirmation</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {populateRows()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"uk-margin-small-top uk-margin-left\">\r\n                        <small>Please select any passenger or all to cancel reservation</small><br />\r\n                        <button className=\"uk-button uk-button-primary\"\r\n                            disabled={!passengers.filter(passenger => passenger.isChecked).length > 0}\r\n                            onClick={handleCancel}>\r\n                            Cancel Reservation\r\n                        </button>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { format } from 'date-fns';\r\n\r\nexport default function UserInfo() {\r\n    const { firstName, lastName, middleInitial, email, joinedDate } = useSelector(state => ({\r\n        firstName: state.user.info.firstName,\r\n        lastName: state.user.info.lastName,\r\n        middleInitial: state.user.info.middleInitial,\r\n        email: state.user.info.email,\r\n        joinedDate: state.user.info.joinedDate,\r\n    }))\r\n    return (\r\n        <li className='uk-width-1-1'>\r\n            <a className='uk-accordion-title uk-text-small uk-text-bold' href='#information'>\r\n                <h4>User Basic Information</h4>\r\n            </a>\r\n            <div className='uk-accordion-content' uk-grid=\"\">\r\n                <div className=\"uk-width-1-1\" uk-grid=\"\">\r\n                    <div className=\"uk-margin-small-left uk-padding-remove uk-width-1-4@s\">\r\n                        <small>First Name</small>\r\n                        <div>{firstName}</div>\r\n                    </div>\r\n                    <div className=\"uk-margin-small-left uk-padding-remove uk-width-1-4@s\">\r\n                        <small>Last Name</small>\r\n                        <div>{lastName}</div>\r\n                    </div>\r\n                    <div className=\"uk-margin-small-left uk-padding-remove uk-width-1-4@s\">\r\n                        <small>Middle Initial</small>\r\n                        <div>{middleInitial}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uk-width-1-1\" uk-grid=\"\">\r\n                    <div className=\"uk-margin-small-left uk-padding-remove uk-width-1-4@s\">\r\n                        <small>Email</small>\r\n                        <div>{email}</div>\r\n                    </div>\r\n                    <div className=\"uk-margin-small-left uk-padding-remove uk-width-1-4@s\">\r\n                        <small>Joined date</small>\r\n                        <div>{format(new Date(joinedDate), \"iiii MMM dd, yyyy HH:mm:ss\")}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { validateStrongPassword } from 'utils/validators';\r\nimport PasswordField from \"components/PasswordField\"\r\n\r\nexport default function UpdatePassword() {\r\n    const dispatch = useDispatch()\r\n    const { ID } = useSelector(state => ({ ID: state.user.info.ID }))\r\n\r\n    const [inputs, setInputs] = useState({ currentPassword: '', newPassword: '', confirmNewPassword: '' })\r\n    const [valids, setValids] = useState({ currentPassword: true, newPassword: true, confirmNewPassword: true })\r\n\r\n    const handleChange = e => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n        setValids({ ...valids, [e.target.name]: true })\r\n    }\r\n\r\n    const handleOnFocusPassword = e => {\r\n        setInputs({ ...inputs, newPassword: '', confirmNewPassword: '' })\r\n        setValids({ ...valids, newPassword: true, confirmNewPassword: true })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { currentPassword, newPassword, confirmNewPassword } = inputs\r\n        let validcurrentPassword = currentPassword.length > 5\r\n        let validPassword = newPassword.length > 5 && validateStrongPassword(newPassword)\r\n        let validconfirmPassword = confirmNewPassword.length > 5 && confirmNewPassword === newPassword\r\n        if (!validcurrentPassword || !validPassword || !validconfirmPassword) {\r\n            return setValids({ currentPassword: validcurrentPassword, newPassword: validPassword, confirmNewPassword: validconfirmPassword })\r\n        }\r\n\r\n        dispatch({ type: \"UPDATE_PASSWORD\", payload: { ID, currentPassword, newPassword } })\r\n        setInputs({ currentPassword: '', newPassword: '', confirmNewPassword: '' })\r\n        setValids({ currentPassword: true, newPassword: true, confirmNewPassword: true })\r\n    }\r\n\r\n    return (\r\n        <li className='uk-width-1-1'>\r\n            <a className='uk-accordion-title uk-text-small uk-text-bold' href='#update-password'>\r\n                <h4>User Password</h4>\r\n            </a>\r\n            <div className='uk-accordion-content' uk-grid=\"\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className='uk-margin-small-top uk-width-1-1 uk-padding-remove uk-margin-remove-top'>\r\n                        <div className=\"uk-margin-auto-left uk-margin-remove-left@s uk-padding-small uk-width-1-4@s\" uk-grid=\"\">\r\n                            <div className=\"uk-width-1-1\">\r\n                                <label className=\"uk-form-label uk-text-bold\" htmlFor=\"form-stacked-text\">Current Password</label>\r\n                                <input\r\n                                    name=\"currentPassword\"\r\n                                    className={`uk-input ${valids.currentPassword ? \"\" : \"uk-form-danger\"}`}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Current Password\"\r\n                                    value={inputs.currentPassword}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <small style={{ color: \"red\", display: valids.currentPassword ? \"none\" : \"\" }}>Password is not valid</small>\r\n                            </div>\r\n                            <PasswordField\r\n                                passwordId=\"newPassword\"\r\n                                passwordValue={inputs.newPassword}\r\n                                isValidPassword={valids.newPassword}\r\n                                confirmPasswordId=\"confirmNewPassword\"\r\n                                isValidConfirmPassword={valids.confirmNewPassword}\r\n                                confirmPasswordValue={inputs.confirmNewPassword}\r\n                                onChange={handleChange}\r\n                                onFocus={handleOnFocusPassword}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='uk-margin-small-top uk-width-1-1'>\r\n                        <button\r\n                            className=\"uk-button uk-button-primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Update Password\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </li >\r\n    )\r\n}\r\n","const converter = {\r\n    optionTextToId: (options, text) => {\r\n        return options.find(e => e.text === text).id\r\n    },\r\n    optionIdToText: (options, id) => {\r\n        return options.find(e => e.id === id).text\r\n    },\r\n}\r\n\r\nexport default converter;","const flightTimeOptions = [\r\n    { id: 'any', text: 'All day' },\r\n    { id: 'before12', text: 'Before noon' },\r\n    { id: '12to6', text: 'Noon - 6pm' },\r\n    { id: 'after6', text: 'After 6pm' }\r\n]\r\n\r\nexport default flightTimeOptions","const flightClassOptions = [\r\n    { id: 'any', text: 'Any' },\r\n    { id: 'eco', text: 'Economy' },\r\n    { id: 'bus', text: 'Business' },\r\n]\r\n\r\nexport default flightClassOptions","const sortByOptions = [\r\n    { id: 'depTime', text: 'Depart Time' },\r\n    { id: 'arrTime', text: 'Arrive Time' },\r\n    { id: 'price', text: 'Price' },\r\n]\r\n\r\nexport default sortByOptions;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { generateOptions } from 'utils/generators';\r\nimport converter from \"utils/converter\"\r\nimport flightTimeOptions from 'models/flightTimeOptions';\r\nimport flightClassOptions from 'models/flightClassOptions';\r\nimport sortByOptions from 'models/sortByOptions';\r\n\r\nexport default function UserPreference() {\r\n    const dispatch = useDispatch()\r\n    const { departTime, arriveTime, flightClass, maxPrice, sortBy, DEFAULT_MAX_PRICE } =\r\n        useSelector(state => ({\r\n            departTime: state.user.preference.departTime,\r\n            arriveTime: state.user.preference.arriveTime,\r\n            flightClass: state.user.preference.flightClass,\r\n            maxPrice: state.user.preference.maxPrice,\r\n            sortBy: state.user.preference.sortBy,\r\n            DEFAULT_MAX_PRICE: state.user.DEFAULT_MAX_PRICE,\r\n        }))\r\n\r\n    const [flightTimeInputs, setFlightTimeInputs] = useState({ fromOption: departTime, toOption: arriveTime })\r\n    const [flightClassInput, setFlightClassInput] = useState(flightClass)\r\n    const [maxPriceInput, setMaxPrice] = useState(+maxPrice)\r\n    const [sortByInput, setSortByInput] = useState(sortBy)\r\n\r\n    const handleSelectFlightTimeOption = e => setFlightTimeInputs({ ...flightTimeInputs, [e.target.name]: e.target.value })\r\n\r\n    const handleSelectFlightClassOption = e => setFlightClassInput(e.target.value)\r\n\r\n    const handleSetMaxPrice = e => setMaxPrice(+e.target.value)\r\n\r\n    const handleSelectSortByOption = e => setSortByInput(e.target.value)\r\n\r\n    const handleSave = e => {\r\n        dispatch({\r\n            type: 'UPDATE_PREFERENCE',\r\n            payload: {\r\n                departTimeId: converter.optionTextToId(flightTimeOptions, flightTimeInputs.fromOption),\r\n                arriveTimeId: converter.optionTextToId(flightTimeOptions, flightTimeInputs.toOption),\r\n                flightClassId: converter.optionTextToId(flightClassOptions, flightClassInput),\r\n                maxPrice: maxPriceInput,\r\n                sortById: converter.optionTextToId(sortByOptions, sortByInput),\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <li className='uk-width-1-1'>\r\n            <a className='uk-accordion-title uk-text-small uk-text-bold' href='#preference'>\r\n                <h4>User Preference</h4>\r\n            </a>\r\n            <div className='uk-accordion-content' uk-grid=\"\">\r\n                <div className='uk-margin-small-top uk-width-1-1'>\r\n                    <small>Depart time</small><br />\r\n                    {generateOptions('uk-select uk-form-small uk-width-1-6@s', handleSelectFlightTimeOption,\r\n                        flightTimeInputs.fromOption, flightTimeOptions, { name: \"fromOption\" })}\r\n                </div>\r\n                <div className='uk-margin-small-top uk-width-1-1'>\r\n                    <small>Arrive time</small><br />\r\n                    {generateOptions('uk-select uk-form-small uk-width-1-6@s', handleSelectFlightTimeOption,\r\n                        flightTimeInputs.toOption, flightTimeOptions, { name: \"toOption\" })}\r\n                </div>\r\n                <div className='uk-margin-small-top uk-width-1-1'>\r\n                    <small>Flight class</small><br />\r\n                    {generateOptions('uk-select uk-form-small uk-width-1-6@s', handleSelectFlightClassOption, flightClassInput, flightClassOptions)}\r\n                </div>\r\n                <div className='uk-margin-small-top uk-width-1-1'>\r\n                    <small>Max price: {maxPriceInput === DEFAULT_MAX_PRICE ? \"Any\" : maxPriceInput} </small><br />\r\n                    <input\r\n                        className='uk-range uk-width-1-6@s'\r\n                        type='range' min='50' max={DEFAULT_MAX_PRICE} step='50'\r\n                        value={maxPriceInput} onChange={handleSetMaxPrice}\r\n                    />\r\n                </div>\r\n                <div className='uk-margin-small-top uk-width-1-1'>\r\n                    <small>Sort by</small><br />\r\n                    {generateOptions('uk-select uk-form-small uk-width-1-6@s', handleSelectSortByOption, sortByInput, sortByOptions)}\r\n                </div>\r\n                <div className='uk-margin-small-top uk-width-1-1'>\r\n                    <button\r\n                        className=\"uk-button uk-button-primary\"\r\n                        onClick={handleSave}>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n// props:\r\n// data - required\r\n// value - required\r\n// className - optional\r\n// onChange - optional\r\n// suggestionItemOnClick - optional\r\n\r\nexport class Autocomplete extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.suggestionListRef = null\r\n        //this.getInputRect = () => { return ReactDOM.findDOMNode(this.inputRect).getBoundingClientRect() }\r\n        this.setSuggestionListRef = element => this.suggestionListRef = element\r\n        this.state = {\r\n            currentFocus: undefined,\r\n            input: props.value,\r\n            closeSuggestion: false,\r\n        }\r\n    }\r\n\r\n    getSuggestionParentStyle = () => {\r\n        if (this.state.input === \"\" || this.state.closeSuggestion)\r\n            return { display: \"none\" }\r\n        return {\r\n            position: \"absolute\",\r\n            border: \"1px solid #d4d4d4\",\r\n            zIndex: 9999,\r\n            /*position the autocomplete items to be the same width as the container:*/\r\n            top: \"100 %\",\r\n            left: 0,\r\n            right: 0,\r\n            // top: bottom,\r\n            // left,\r\n            // width,\r\n            maxHeight: 200,\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\"\r\n        }\r\n    }\r\n\r\n    getSuggestionItemStyle = () => {\r\n        return {\r\n            background: \"white\",\r\n            // height: this.inputRect.height,\r\n            padding: 8,\r\n            cursor: \"pointer\",\r\n            borderBottom: \"1px solid #d4d4d4\",\r\n            zIndex: 99999,\r\n        }\r\n    }\r\n\r\n    selectSuggestion = e => {\r\n        var [name, value] = e.target.id.split('@')\r\n        this.props.onChange(e = { target: { name, value } })\r\n        this.setState({ input: value, closeSuggestion: true })\r\n    }\r\n\r\n    createSuggestions = suggestions => {\r\n        if (this.state.input === \"\" || suggestions.length === 0)\r\n            return <React.Fragment></React.Fragment>\r\n        else if (this.state.closeSuggestion === false) {\r\n            return suggestions.map((el, id) =>\r\n                <div id={`${this.props.name}@${el}`} key={id} style={this.getSuggestionItemStyle()} onClick={this.selectSuggestion}>\r\n                    {el}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleInputKeyDown = (e, suggestions) => {\r\n        let x = this.suggestionListRef\r\n        if (this.suggestionListRef) x = this.suggestionListRef.getElementsByTagName(\"div\")\r\n        if (e.keyCode === 40) {\r\n            /*If the arrow DOWN key is pressed,\r\n            increase the currentFocus variable:*/\r\n            this.setState(prevState => ({ currentFocus: prevState.currentFocus + 1 }), () => {\r\n                /*and and make the current item more visible:*/\r\n                this.addActive(x);\r\n            })\r\n        } else if (e.keyCode === 38) { //up\r\n            /*If the arrow UP key is pressed,\r\n            decrease the currentFocus variable:*/\r\n            this.setState(prevState => ({ currentFocus: prevState.currentFocus - 1 }), () => {\r\n                /*and and make the current item more visible:*/\r\n                this.addActive(x);\r\n            })\r\n        } else if (e.keyCode === 13) {\r\n            /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n            e.preventDefault();\r\n            if (this.state.currentFocus > -1) {\r\n                /*and simulate a click on the \"active\" item:*/\r\n                if (x) x[this.state.currentFocus].click();\r\n            }\r\n        }\r\n    }\r\n\r\n    addActive = x => {\r\n        let currentFocus = this.state.currentFocus\r\n        /*a function to classify an item as \"active\":*/\r\n        if (!x) return false;\r\n        /*start by removing the \"active\" class on all items:*/\r\n        this.removeActive(x);\r\n        if (currentFocus >= x.length) currentFocus = 0;\r\n        if (currentFocus < 0) currentFocus = (x.length - 1);\r\n        /*add class \"suggestion-item-active\":*/\r\n        x[currentFocus].classList.add(\"suggestion-item-active\");\r\n        var scrollTo = x[currentFocus].offsetTop;\r\n        this.suggestionListRef.scrollTop = scrollTo;\r\n    }\r\n\r\n    removeActive = x => {\r\n        /*a function to remove the \"active\" class from all suggestion items:*/\r\n        for (var i = 0; i < x.length; i++) {\r\n            x[i].classList.remove(\"suggestion-item-active\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var data = this.props.data\r\n        var suggestions = data && data.length > 0 ? data.filter(e => e.toUpperCase().includes(this.state.input.toUpperCase())) : []\r\n        return (\r\n            <div style={{ position: \"relative\" }}>\r\n                <input\r\n                    className={this.props.className}\r\n                    type=\"text\"\r\n                    name={this.props.name}\r\n                    value={this.state.input}\r\n                    onChange={e => {\r\n                        this.props.onChange(e)\r\n                        this.setState({ input: e.target.value, currentFocus: -1 })\r\n                    }}\r\n                    onFocus={e => {\r\n                        this.props.onFocus(e)\r\n                        this.setState({ input: \"\", closeSuggestion: false })\r\n                    }}\r\n                    //onBlur={() => this.setState({ closeSuggestion: true })}\r\n                    onKeyDown={e => this.handleInputKeyDown(e, suggestions)}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <div\r\n                    ref={this.setSuggestionListRef}\r\n                    className=\"suggestion-list\"\r\n                    style={this.getSuggestionParentStyle(suggestions.length)}\r\n                >\r\n                    {this.createSuggestions(suggestions)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Autocomplete\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isAfter } from 'date-fns';\r\nimport Autocomplete from '../Autocomplete';\r\n\r\nimport converter from \"utils/converter\";\r\nimport { generateOptions } from 'utils/generators';\r\nimport flightTimeOptions from 'models/flightTimeOptions';\r\nimport flightClassOptions from 'models/flightClassOptions';\r\nimport sortByOptions from 'models/sortByOptions';\r\n\r\nexport default function SearchField(props) {\r\n  const dispatch = useDispatch()\r\n\r\n  const { airportList } = useSelector(state => ({\r\n    airportList: state.airport.list\r\n  }))\r\n\r\n  const { departTime, arriveTime, flightClass, maxPrice, sortBy, DEFAULT_MAX_PRICE } =\r\n    useSelector(state => ({\r\n      departTime: state.user.preference.departTime,\r\n      arriveTime: state.user.preference.arriveTime,\r\n      flightClass: state.user.preference.flightClass,\r\n      maxPrice: state.user.preference.maxPrice,\r\n      sortBy: state.user.preference.sortBy,\r\n      DEFAULT_MAX_PRICE: state.user.DEFAULT_MAX_PRICE,\r\n    }))\r\n\r\n  const [tripType, setTripType] = useState({ roundtrip: true })\r\n  const [searchInputs, setSearchInputs] = useState({ flightFrom: '', flightTo: '' });\r\n  const [dateInputs, setDateInputs] = useState({ fromDate: new Date(), toDate: new Date() })\r\n  const [flightTimeInputs, setFlightTimeInputs] = useState({ fromOption: departTime, toOption: arriveTime })\r\n  const [numOfPassengers, setNumOfPassengers] = useState(1)\r\n  const [flightClassInput, setFlightClassInput] = useState(flightClass)\r\n  const [maxPriceInput, setMaxPrice] = useState(+maxPrice)\r\n  const [sortByInput, setSortByInput] = useState(sortBy)\r\n\r\n  const [validSearchInputs, validateSearchInputs] = useState({ flightFrom: true, flightTo: true })\r\n\r\n  useEffect(() => {\r\n    // minDate of ToDate-DatePicker can't be before selected fromDate\r\n    if (isAfter(dateInputs.fromDate, dateInputs.toDate)) {\r\n      setDateInputs({ ...dateInputs, toDate: dateInputs.fromDate })\r\n    }\r\n  }, [dateInputs])\r\n\r\n  const handleTripType = e => setTripType({ roundtrip: (e.target.id !== '') })\r\n\r\n  const handleFromDateChange = date => setDateInputs({ ...dateInputs, fromDate: date })\r\n\r\n  const handleToDateChange = date => setDateInputs({ ...dateInputs, toDate: date })\r\n\r\n  const handleSelectFlightTimeOption = e => setFlightTimeInputs({ ...flightTimeInputs, [e.target.name]: e.target.value })\r\n\r\n  const handleSetNumOfPassengers = e => setNumOfPassengers(e.target.value)\r\n\r\n  const handleSelectFlightClassOption = e => setFlightClassInput(e.target.value)\r\n\r\n  const handleSetMaxPrice = e => setMaxPrice(+e.target.value)\r\n\r\n  const handleSelectSortByOption = e => setSortByInput(e.target.value)\r\n\r\n  const handleOnChangeAutoComplete = e => {\r\n    validateSearchInputs({ ...validSearchInputs, [e.target.name]: true })\r\n    setSearchInputs({ ...searchInputs, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleOnFocusAutoComplete = e => {\r\n    validateSearchInputs({ ...validSearchInputs, [e.target.name]: true })\r\n    setSearchInputs({ ...searchInputs, [e.target.name]: \"\" })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    // validate searchInputs\r\n    let { flightFrom, flightTo } = searchInputs\r\n    let validFlightFrom = flightFrom.length > 0 && airportList.includes(flightFrom)\r\n    let validFlightTo = flightTo.length > 0 && airportList.includes(flightTo)\r\n    if (!validFlightFrom || !validFlightTo) {\r\n      return validateSearchInputs({ flightFrom: validFlightFrom, flightTo: validFlightTo })\r\n    }\r\n\r\n    // // get airport code only\r\n    const extractAirportCode = airport => {\r\n      return airport.split(',')[1].trim().substring(0, 3)\r\n    }\r\n\r\n    dispatch({\r\n      type: \"BOOKING_APPLY_SEARCH\",\r\n      inputs: {\r\n        isRoundTrip: tripType.roundtrip,\r\n        searchInputs: {\r\n          flightFrom: extractAirportCode(flightFrom),\r\n          flightTo: extractAirportCode(flightTo),\r\n        },\r\n        maxPrice: maxPriceInput,\r\n        dateInputs,\r\n        departTimeId: converter.optionTextToId(flightTimeOptions, flightTimeInputs.fromOption),\r\n        arriveTimeId: converter.optionTextToId(flightTimeOptions, flightTimeInputs.toOption),\r\n        numOfPassengers,\r\n        flightClassId: converter.optionTextToId(flightClassOptions, flightClassInput),\r\n        sortById: converter.optionTextToId(sortByOptions, sortByInput),\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className='uk-margin-auto uk-margin-small-top uk-card uk-card-default uk-card-small uk-card-body uk-grid-small uk-width-1-2@l' uk-grid=''\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className='uk-card-header'><h4>Book a Flight</h4></div>\r\n      <div className='uk-width-1-1@s' uk-grid=''>\r\n        <div className='uk-width-1-2@s' style={{ paddingTop: 26 }}>\r\n          <label><input className='uk-radio' type='radio' id='roundtrip' name='trip-type' defaultChecked='true' onChange={handleTripType} /> Roundtrip</label>\r\n          &nbsp;&nbsp;\r\n          <label><input className='uk-radio' type='radio' name='trip-type' onChange={handleTripType} /> One-way</label>\r\n        </div>\r\n        <div className='uk-width-1-3@s'>\r\n          <div className='uk-width-1-2 uk-width-1-2@s'>\r\n            <small>Passengers</small>\r\n            <input className=\"uk-input uk-form-small\" type=\"number\" min=\"1\"\r\n              // input number doesn't work on Mobile view\r\n              // onKeyPress={e => e.preventDefault()}\r\n              // onKeyDown={e => e.preventDefault()}\r\n              value={numOfPassengers}\r\n              onChange={handleSetNumOfPassengers}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='uk-width-1-1@s' uk-grid=''>\r\n        <div className='uk-width-1-2@s'>\r\n          <small>Flight From</small>\r\n          <Autocomplete\r\n            className={`uk-input uk-form-small ${validSearchInputs.flightFrom ? \"\" : \"uk-form-danger\"}`}\r\n            name=\"flightFrom\"\r\n            data={airportList}\r\n            value={searchInputs.flightFrom}\r\n            onChange={handleOnChangeAutoComplete}\r\n            onFocus={handleOnFocusAutoComplete}\r\n          />\r\n          <small style={{ color: \"red\", display: validSearchInputs.flightFrom ? \"none\" : \"\" }}>\r\n            Invalid. Please select a suggestion\r\n          </small>\r\n          {/* <input className='uk-input' type='text' name='flightFrom' value={searchInputs.flightFrom} onChange={handleInputChange} /> */}\r\n        </div>\r\n        <div className='uk-width-1-3 uk-width-1-5@s'>\r\n          <small>Depart Date</small>\r\n          <DatePicker className='uk-input uk-form-small' dateFormat='MM/dd'\r\n            minDate={new Date()} selected={dateInputs.fromDate} onChange={handleFromDateChange} />\r\n        </div>\r\n        <div className='uk-width-1-4@s'>\r\n          <small>Depart time</small>\r\n          {generateOptions('uk-select uk-form-small', handleSelectFlightTimeOption,\r\n            flightTimeInputs.fromOption, flightTimeOptions, { name: \"fromOption\" })}\r\n        </div>\r\n      </div>\r\n      <div className='uk-width-1-1@s' uk-grid=''>\r\n        <div className='uk-width-1-2@s'>\r\n          <small>Flight To</small>\r\n          <Autocomplete\r\n            className={`uk-input uk-form-small ${validSearchInputs.flightTo ? \"\" : \"uk-form-danger\"}`}\r\n            name=\"flightTo\"\r\n            data={airportList}\r\n            value={searchInputs.flightTo}\r\n            onChange={handleOnChangeAutoComplete}\r\n            onFocus={handleOnFocusAutoComplete}\r\n          />\r\n          <small style={{ color: \"red\", display: validSearchInputs.flightTo ? \"none\" : \"\" }}>\r\n            Invalid. Please select a suggestion\r\n          </small>\r\n        </div>\r\n        <div className='uk-width-1-3 uk-width-1-5@s'>\r\n          <small>Return Date</small>\r\n          <DatePicker className='uk-input uk-form-small' dateFormat='MM/dd'\r\n            minDate={dateInputs.fromDate} selected={dateInputs.toDate} onChange={handleToDateChange} disabled={!tripType.roundtrip} />\r\n        </div>\r\n        <div className='uk-width-1-4@s'>\r\n          <small>Return time</small>\r\n          {generateOptions('uk-select uk-form-small', handleSelectFlightTimeOption,\r\n            flightTimeInputs.toOption, flightTimeOptions, { name: \"toOption\", disabled: !tripType.roundtrip })}\r\n        </div>\r\n      </div>\r\n      <ul className='uk-width-1-1@s' uk-grid='' uk-accordion=''>\r\n        <li className='uk-width-1-1@s'>\r\n          <a className='uk-accordion-title uk-text-small uk-text-bold' href='#adv-option'>Advanced Options</a>\r\n          <div className='uk-accordion-content' uk-grid=\"\">\r\n            <div className='uk-margin-small-top uk-width-1-3@s'>\r\n              <small>Flight class</small>\r\n              {generateOptions('uk-select uk-form-small', handleSelectFlightClassOption, flightClassInput, flightClassOptions)}\r\n            </div>\r\n            <div className='uk-margin-small-top uk-width-1-3@s'>\r\n              <small>Max price: {maxPriceInput === DEFAULT_MAX_PRICE ? \"Any\" : maxPriceInput} </small>\r\n              <input className='uk-range' type='range' min='50' max={DEFAULT_MAX_PRICE} step='50' value={maxPriceInput} onChange={handleSetMaxPrice} />\r\n            </div>\r\n            <div className='uk-margin-small-top uk-width-1-3@s'>\r\n              <small>Sort by</small>\r\n              {generateOptions('uk-select uk-form-small', handleSelectSortByOption, sortByInput, sortByOptions)}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <div className='uk-width-1-1@s uk-card-footer uk-flex uk-flex-right'>\r\n        <button className='uk-button uk-button-primary' type=\"submit\">Apply</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { format, differenceInHours } from 'date-fns'\r\n\r\nexport function getTimeIn12HourFormat(dateString) {\r\n    //const time = parse(timeString, \"HH:mm\", new Date())\r\n    const time = new Date(dateString)\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"uk-text-large uk-text-bold uk-margin-small-right\">{format(time, \"hh:mm\")}</span>\r\n            <small>{format(time, \"a\")}</small>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport function calcDuration(depTimeString, arrTimeString) {\r\n    // const arrTime = parse(arrTimeString, \"HH:mm\", new Date(arrTimeString))\r\n    // const depTime = parse(depTimeString, \"HH:mm\", new Date(depTimeString))\r\n    const arrTime = new Date(arrTimeString)\r\n    const depTime = new Date(depTimeString)\r\n    const diffHours = differenceInHours(arrTime, depTime)\r\n    var diffMinutes = arrTime.getMinutes() - depTime.getMinutes()\r\n    diffMinutes = diffMinutes < 0 ? -diffMinutes : diffMinutes\r\n    //return `${diffHours} hour${diffHours > 1 ? \"s\" : \"\"} ${diffMinutes > 0 ? `and ${diffMinutes} minute${diffMinutes > 1 ? \"s\" : \"\"}` : \"\"} `\r\n    return `${diffHours}h ${diffMinutes}m`\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { format } from 'date-fns';\r\nimport { getTimeIn12HourFormat } from 'utils/datetime'\r\n\r\n// props:\r\n// type (Depart || Return) - required\r\n// SELECTED_DATE - required\r\n// FLIGHT_TIME - optional\r\n\r\nexport default function FlightSummary(props) {\r\n    const dispatch = useDispatch()\r\n    const { TYPE, DEPART_FROM, ARRIVE_TO, SELECTED_DATE, FLIGHT_TIME } = props\r\n    return (\r\n        <div className=\"uk-margin-auto@s uk-width-1-1\" uk-grid=''>\r\n            <div className=\"uk-width-1-1 uk-text-large uk-text-bold uk-padding-remove\">\r\n                {TYPE} Flight\r\n            </div>\r\n            <div className=\"uk-width-1-3@s uk-padding-remove\">\r\n                <span className=\"uk-width-1-1 uk-text-bold uk-padding-remove\">\r\n                    {DEPART_FROM} <span uk-icon=\"icon: arrow-right\"></span> {ARRIVE_TO}\r\n                </span>\r\n                <br />\r\n                <button\r\n                    className=\"uk-button uk-button-link uk-text-capitalize\"\r\n                    onClick={() => dispatch({ type: \"BOOKING_GO_SEARCH\" })}\r\n                >\r\n                    Modify\r\n                </button>\r\n            </div>\r\n            <div className=\"uk-width-1-3@s uk-padding-remove\">\r\n                <span className=\"uk-width-1-1 uk-text-bold uk-padding-remove\">\r\n                    {format(SELECTED_DATE, \"iiii MMM dd, yyyy\")} <br />\r\n                    {\r\n                        FLIGHT_TIME && FLIGHT_TIME.length === 2 &&\r\n                        <React.Fragment>\r\n                            {getTimeIn12HourFormat(FLIGHT_TIME[0])}\r\n                            <span uk-icon=\"icon: arrow-right; ratio: 1.5\" style={{ verticalAlign: \"bottom\" }}></span>\r\n                            {getTimeIn12HourFormat(FLIGHT_TIME[1])}\r\n                        </React.Fragment>\r\n\r\n                    }\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport converter from \"utils/converter\"\r\nimport { generateOptions } from 'utils/generators'\r\n\r\n//import flightTimeOptions from 'models/flightTimeOptions';\r\nimport sortByOptions from 'models/sortByOptions';\r\nimport FlightSummary from '../FlightSummary';\r\n\r\n// props:\r\n// type (Depart || Return) - required\r\n// SELECTED_DATE - required\r\n// SELECTED_FLIGHT_TIME_ID - required\r\n// SELECTED_SORT_BY_ID_ID - required\r\n\r\nexport default function ResultHeader(props) {\r\n    const { selected, TYPE, SELECTED_DATE, SELECTED_SORT_BY_ID } = props\r\n\r\n    const getDepartKey = () => {\r\n        return \"flight\" + (TYPE === \"Depart\" ? \"From\" : \"To\")\r\n    }\r\n\r\n    const getArriveKey = () => {\r\n        return \"flight\" + (TYPE === \"Depart\" ? \"To\" : \"From\")\r\n    }\r\n\r\n    const { departFrom, arriveTo } = useSelector(state => ({\r\n        departFrom: state.booking.searchInputs[getDepartKey()],\r\n        arriveTo: state.booking.searchInputs[getArriveKey()]\r\n    }))\r\n\r\n    const [sortByInput, setSortByInput] = useState(converter.optionIdToText(sortByOptions, SELECTED_SORT_BY_ID))\r\n\r\n    const handleSelectSortByOption = e => {\r\n        setSortByInput(e.target.value)\r\n        props.handleSelectSortBy(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div id=\"flight-search-result\" className=\"uk-grid-small uk-width-1-1 uk-margin-small-top uk-margin-small-bottom\"\r\n            style={{ backgroundColor: 'white' }} uk-grid=''>\r\n            <FlightSummary\r\n                TYPE={TYPE}\r\n                DEPART_FROM={departFrom}\r\n                ARRIVE_TO={arriveTo}\r\n                SELECTED_DATE={SELECTED_DATE}\r\n            />\r\n            <hr className=\"uk-width-1-1 uk-margin-remove uk-padding-remove\" />\r\n            {\r\n                !selected &&\r\n                <div className=\"uk-margin-auto@s uk-margin-remove-top uk-width-1-1 uk-padding-small uk-padding-remove-top\" uk-grid=''>\r\n                    <div className=\"uk-width-1-3 uk-width-1-5@s\">\r\n                        <small>Sort By</small>\r\n                        {generateOptions('uk-select uk-form-small', handleSelectSortByOption, sortByInput, sortByOptions)}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { getTimeIn12HourFormat, calcDuration } from 'utils/datetime'\r\n// props:\r\n// data - required\r\n// data.depTime (DepartTime) - required\r\n// data.arrTime (ArriveTime) - required\r\n// data.economy - required\r\n// data.business - required\r\n\r\nexport default function ResultItem(props) {\r\n    const { id, selected, type, handleSelectFlight, handleChangeFlight } = props\r\n    const { depTime, arrTime } = props.data\r\n    const economy = { price: props.data.ecoPrice, seats: props.data.ecoSeats }\r\n    const business = { price: props.data.busPrice, seats: props.data.busSeats }\r\n    const economyAvailability = economy && economy.seats < 1\r\n    const businessAvailability = business && business.seats < 1\r\n\r\n    return (\r\n        <div className=\"uk-margin-auto@s uk-margin-remove-top uk-margin-remove-bottom uk-width-1-1 uk-padding-small uk-card uk-card-default uk-card-hover\" uk-grid=\"\">\r\n            <div className=\"uk-width-1-1 uk-width-1-3@m uk-padding uk-padding-remove-top uk-padding-remove-bottom\">\r\n                <div className=\"uk-width-1-1 uk-margin-auto\">\r\n                    {getTimeIn12HourFormat(depTime)}\r\n                    <span uk-icon=\"icon: arrow-right; ratio: 1.5\" style={{ verticalAlign: \"bottom\" }}></span>\r\n                    {getTimeIn12HourFormat(arrTime)}\r\n                </div>\r\n                <div className=\"uk-width-1-1\">\r\n                    <small>Duration: {calcDuration(depTime, arrTime)}</small>\r\n                </div>\r\n            </div>\r\n            {\r\n                selected && selected === true ?\r\n                    <div className=\"uk-width-1-1 uk-width-1-3@m uk-padding uk-padding-remove-top uk-padding-remove-bottom\">\r\n                        <button\r\n                            className={`uk-button uk-margin-small-bottom uk-padding-small uk-button-${economy ? 'default' : 'primary'}`}\r\n                            disabled={true}\r\n                        >\r\n                            {\r\n                                economy.price ?\r\n                                    <React.Fragment>\r\n                                        <div className=\"uk-text-small uk-text-uppercase\">\r\n                                            Economy\r\n                                        </div>\r\n                                        <div style={{ margin: -5, marginBottom: -15 }}>\r\n                                            <small style={{ verticalAlign: \"super\" }}>$</small>\r\n                                            <span className=\"uk-text-large uk-text-bold\">{economy.price}</span>\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                    :\r\n                                    <React.Fragment>\r\n                                        <div className=\"uk-text-small uk-text-uppercase\">\r\n                                            Business\r\n                                        </div>\r\n                                        <div style={{ margin: -5, marginBottom: -15 }}>\r\n                                            <small style={{ verticalAlign: \"super\" }}>$</small>\r\n                                            <span className=\"uk-text-large uk-text-bold\">{business.price}</span>\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                            }\r\n                        </button>\r\n                        <button\r\n                            className=\"uk-button uk-button-default uk-margin-small-bottom uk-margin-small-left\"\r\n                            onClick={handleChangeFlight}\r\n                        >\r\n                            Change\r\n                        </button>\r\n                    </div>\r\n                    :\r\n                    <div className=\"uk-width-1-1 uk-width-1-3@m uk-padding uk-padding-remove-top uk-padding-remove-bottom\">\r\n                        <button className=\"uk-button uk-button-default uk-margin-small-right uk-margin-small-bottom\"\r\n                            disabled={economyAvailability}\r\n                            style={{ verticalAlign: \"top\" }}\r\n                            onClick={() => handleSelectFlight(`${type}-economy-${id}`)}\r\n                        >\r\n                            <div className=\"uk-text-small uk-text-uppercase\">\r\n                                Economy\r\n                            </div>\r\n                            {\r\n                                economy.seats > 0 ?\r\n                                    <React.Fragment>\r\n                                        <div style={{ margin: -5, marginBottom: -15 }}>\r\n                                            <small style={{ verticalAlign: \"super\" }}>$</small>\r\n                                            <span className=\"uk-text-large uk-text-bold\">{economy.price}</span>\r\n                                        </div>\r\n                                        <small className=\"uk-text-small uk-text-lowercase uk-text-italic\">\r\n                                            {economy.seats} left\r\n                                        </small>\r\n                                    </React.Fragment>\r\n                                    :\r\n                                    <div className=\"uk-text-small uk-text-bold uk-text-capitalize\">\r\n                                        Sold out\r\n                            </div>\r\n                            }\r\n                        </button>\r\n                        <button className=\"uk-button uk-button-primary uk-margin-small-bottom\"\r\n                            disabled={businessAvailability}\r\n                            style={{ verticalAlign: \"top\" }}\r\n                            onClick={() => handleSelectFlight(`${type}-business-${id}`)}\r\n                        >\r\n                            <div className=\"uk-text-small uk-text-uppercase\">\r\n                                Business\r\n                            </div>\r\n                            {\r\n                                business.seats > 0 ?\r\n                                    <React.Fragment>\r\n                                        <div style={{ margin: -5, marginBottom: -15 }}>\r\n                                            <small style={{ verticalAlign: \"super\" }}>$</small>\r\n                                            <span className=\"uk-text-large uk-text-bold\">{business.price}</span>\r\n                                        </div>\r\n                                        <small className=\"uk-text-small uk-text-lowercase uk-text-italic\">\r\n                                            {business.seats} left\r\n                                        </small>\r\n                                    </React.Fragment>\r\n                                    :\r\n                                    <div className=\"uk-text-small uk-text-bold uk-text-capitalize\">\r\n                                        Sold out\r\n                            </div>\r\n                            }\r\n                        </button>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport ResultHeader from 'components/FlightSearch/ResultHeader';\r\n\r\nimport { parse, compareAsc } from \"date-fns\";\r\nimport { generateComponents } from 'utils/generators';\r\nimport ResultItem from \"components/FlightSearch/ResultItem\";\r\nimport { connect } from 'react-redux'\r\n\r\nexport class FlightSearchResults extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.getType = () => { return props.type.toLowerCase() + \"Flight\" }\r\n        this.state = {\r\n            selected: props.selectedTicket[this.getType()],\r\n            selectedDate: props.selectedDate[`${props.type === \"Depart\" ? \"fromDate\" : \"toDate\"}`],\r\n            selectedFlightTimeId: props.selectedFlightTime[`${props.type === \"Depart\" ? \"departTimeId\" : \"arriveTimeId\"}`],\r\n            flights: props.flights\r\n        }\r\n    }\r\n\r\n    handleSelectFlight = e => {\r\n        const breakdown = e.split('-')\r\n        const flightData = { ...this.props.flights[breakdown[2]] } // duplicate, not using the old data to prevent losing when update Selected\r\n        if (breakdown[1] === 'economy') {\r\n            delete flightData.busPrice\r\n            delete flightData.busSeats\r\n        } else {\r\n            delete flightData.ecoPrice\r\n            delete flightData.ecoSeats\r\n        }\r\n        this.setState({ selected: flightData }, () => {\r\n            this.props.isNextReservation(this.getType(), this.state.selected)\r\n        })\r\n    }\r\n\r\n    handleChangeFlight = e => {\r\n        this.setState({ selected: null }, () => {\r\n            this.props.isNextReservation(this.getType(), this.state.selected)\r\n        })\r\n    }\r\n\r\n    handleSelectSortBy = value => {\r\n        let sorted = this.state.flights\r\n\r\n        const convertStringToDate = string => {\r\n            return parse(string, \"HH:mm\", new Date(this.state.selectedDate))\r\n        }\r\n\r\n        switch (value) {\r\n            case \"Depart Time\":\r\n                sorted = sorted.sort((prev, curr) => compareAsc(convertStringToDate(prev.depTime), convertStringToDate(curr.depTime)))\r\n                break\r\n            case \"Arrive Time\":\r\n                sorted = sorted.sort((prev, curr) => compareAsc(convertStringToDate(prev.arrTime), convertStringToDate(curr.arrTime)))\r\n                break\r\n            case \"Price\":\r\n                sorted = sorted.sort((prev, curr) => prev.ecoPrice - curr.ecoPrice && prev.busPrice - curr.busPrice)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        this.setState({ flights: sorted })\r\n    }\r\n\r\n    render() {\r\n        const { type, selectedSortById } = this.props\r\n        const { selectedDate, selectedFlightTimeId, flights } = this.state\r\n        const isSelected = this.state.selected !== null\r\n        return (\r\n            <React.Fragment>\r\n                <ResultHeader\r\n                    selected={isSelected}\r\n                    TYPE={type}\r\n                    SELECTED_DATE={new Date(selectedDate)}\r\n                    SELECTED_FLIGHT_TIME_ID={selectedFlightTimeId}\r\n                    SELECTED_SORT_BY_ID={selectedSortById}\r\n                    handleSelectSortBy={this.handleSelectSortBy}\r\n                />\r\n                {\r\n                    isSelected === true ?\r\n                        <ResultItem\r\n                            selected={isSelected}\r\n                            data={this.state.selected}\r\n                            handleChangeFlight={this.handleChangeFlight}\r\n                        />\r\n                        :\r\n                        generateComponents(flights, ResultItem, { type, handleSelectFlight: this.handleSelectFlight })\r\n\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedTicket: state.booking.ticket,\r\n    selectedFlight: state.booking.searchInputs,\r\n    selectedDate: state.booking.dateInputs,\r\n    selectedFlightTime: { departTimeId: state.booking.departTimeId, arriveTimeId: state.booking.arriveTimeId },\r\n    selectedSortById: state.booking.sortById,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    isNextReservation: (tripType, selected) => dispatch({ type: \"BOOKING_IS_NEXT_RESERVATION\", tripType, selected })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightSearchResults);\r\n","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport AuthenticatedRoute from \"components/AuthenticatedRoute\";\r\n\r\nexport function generateOptions(className, onChange, defaultValue, listOfOptions, options) {\r\n    return React.createElement('select', { className, onChange, defaultValue, ...options }, [\r\n        listOfOptions.map(opt => React.createElement(\"option\", { key: opt.id, value: opt.text }, [opt.text]))\r\n    ])\r\n}\r\n\r\nexport function generateComponents(listOfData, ParentComponent, options) {\r\n    if (listOfData.length === 0) {\r\n        return (\r\n            <div className=\"uk-margin-auto@s uk-margin-remove-top uk-margin-remove-bottom uk-width-1-1 uk-padding-small uk-card uk-card-default\">\r\n                Found no record\r\n            </div>\r\n        )\r\n    }\r\n    return listOfData.map((data, id) =>\r\n        React.createElement(ParentComponent, { key: id, id, data, ...options }, null))\r\n}\r\n\r\nexport function generateNavItems(listOfRoutes, currentViewPath) {\r\n    return listOfRoutes.map((route, id) => {\r\n        if (route.navItemName) {\r\n            return React.createElement(\"li\", { key: id, className: currentViewPath === route.path ? \"uk-active\" : \"\" }, [\r\n                React.createElement(\"a\", { key: route.id, href: route.path }, [route.navItemName])\r\n            ])\r\n        }\r\n        return null\r\n    })\r\n}\r\n\r\nexport function generateRoutes(listOfRoutes, options) {\r\n    return listOfRoutes.map((route =>\r\n        React.createElement(\r\n            route.requiredAuthentication ? AuthenticatedRoute : Route,\r\n            { key: route.id, ...route, ...options },\r\n            null\r\n        )\r\n    ))\r\n}","const IDType = [\r\n    { id: 'DL', text: 'Driver License' },\r\n    { id: 'Pp', text: 'Passport' },\r\n]\r\n\r\nexport default IDType;","import IDTypeOptions from 'models/IDTypeOptions'\r\n\r\nconst passenger = () => {\r\n    return {\r\n        firstName: '',\r\n        lastName: '',\r\n        middleInitial: '',\r\n        IDType: IDTypeOptions[1].text,\r\n        IDNumber: '',\r\n        reservationEmail: '',\r\n        sendConfirmation: 'no',\r\n        validfirstName: true,\r\n        validlastName: true,\r\n        validmiddleInitial: true,\r\n        validIDNumber: true,\r\n        validreservationEmail: true,\r\n    }\r\n}\r\n\r\nexport default passenger","import React, { useState } from 'react';\r\nimport { generateOptions } from 'utils/generators'\r\nimport IDTypeOptions from 'models/IDTypeOptions'\r\n\r\nexport default function ResvPassenger(props) {\r\n    var { id, form, onChange, onRemove } = props\r\n    const [sendConfirmation, setSendConfirmation] = useState(false)\r\n\r\n    const handleCheckBox = e => {\r\n        e.target.value = e.target.checked ? \"yes\" : \"no\"\r\n        setSendConfirmation(e.target.checked)\r\n        onChange(e)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"uk-margin-small-bottom uk-margin-remove-top\r\n                        uk-card uk-card-default\"\r\n            key={id}\r\n            uk-grid=\"\">\r\n            <div className=\"uk-width-1-1 uk-flex uk-flex-wrap uk-flex-wrap-around uk-padding-remove uk-margin-remove-bottom\">\r\n                <span className=\"uk-width-1-2\"><h4>Passenger {id + 1}</h4></span>\r\n                <span className=\"uk-width-1-2 uk-flex uk-flex-right\">\r\n                    <button className=\"uk-button\"\r\n                        uk-icon=\"icon: close; ratio: 1\"\r\n                        uk-tooltip=\"Remove passenger\"\r\n                        onClick={id => onRemove(id)}\r\n                    >\r\n                    </button>\r\n                </span>\r\n            </div>\r\n            <div className=\"uk-width-1-1 uk-padding-remove uk-margin-remove\" uk-grid=\"\">\r\n                <div className=\"uk-width-1-3@s\">\r\n                    <small>First Name</small>\r\n                    <input id={id} name=\"firstName\" value={form.firstName}\r\n                        className={`uk-input uk-form-small ${form.validfirstName ? '' : 'uk-form-danger'}`}\r\n                        onChange={onChange} />\r\n                    <small style={{ color: \"red\", display: form.validfirstName ? \"none\" : \"\" }}>First name is too short</small>\r\n                </div>\r\n                <div className=\"uk-width-1-3@s\">\r\n                    <small>Last Name</small>\r\n                    <input id={id} name=\"lastName\" value={form.lastName}\r\n                        className={`uk-input uk-form-small ${form.validlastName ? '' : 'uk-form-danger'}`}\r\n                        onChange={onChange} />\r\n                    <small style={{ color: \"red\", display: form.validlastName ? \"none\" : \"\" }}>Last name is too short</small>\r\n                </div>\r\n                <div className=\"uk-width-1-3 uk-width-1-6@s uk-margin-remove\">\r\n                    <small>Middle Initial</small>\r\n                    <input maxLength={1}\r\n                        className={`uk-input uk-form-small ${form.validmiddleInitial ? '' : 'uk-form-danger'}`}\r\n                        id={id} name=\"middleInitial\" value={form.middleInitial}\r\n                        onChange={onChange} />\r\n                    <small style={{ color: \"red\", display: form.validmiddleInitial ? \"none\" : \"\" }}>Alphabetics only</small>\r\n                </div>\r\n            </div>\r\n            <div className=\"uk-width-1-1 uk-padding-remove uk-margin-remove\" uk-grid=\"\">\r\n                <div className=\"uk-width-1-6@s\">\r\n                    <small>ID Type</small>\r\n                    {generateOptions('uk-select uk-form-small', onChange, form.IDType, IDTypeOptions, {id, name: \"IDType\"})}\r\n                </div>\r\n                <div className=\"uk-width-1-4@s\">\r\n                    <small>ID Number</small>\r\n                    <input id={id} name=\"IDNumber\" value={form.IDNumber}\r\n                        className={`uk-input uk-form-small ${form.validIDNumber ? '' : 'uk-form-danger'}`}\r\n                        onChange={onChange} autoComplete=\"off\" />\r\n                    <small style={{ color: \"red\", display: form.validIDNumber ? \"none\" : \"\" }}>ID number is not valid</small>\r\n                </div>\r\n            </div>\r\n            <div className=\"uk-width-1-1 uk-padding-remove uk-margin-remove\" uk-grid=\"\">\r\n                <div className=\"uk-margin-auto-top uk-width-1-3@s\">\r\n                        <label>\r\n                            <input className=\"uk-checkbox uk-margin-small-right\" type=\"checkbox\" \r\n                                id={id}\r\n                                name=\"sendConfirmation\"\r\n                                onChange={handleCheckBox}/> \r\n                            <small>Send confirmation to email</small>\r\n                        </label>\r\n                </div>\r\n            </div>\r\n            {\r\n                sendConfirmation &&\r\n                <div className=\"uk-width-1-1 uk-padding-remove uk-margin-remove\" uk-grid=\"\">\r\n                    <div className=\"uk-width-1-3@s\">\r\n                        <small>Email (optional)</small>\r\n                        <input id={id} name=\"reservationEmail\" value={form.reservationEmail}\r\n                            className={`uk-input uk-form-small ${form.validreservationEmail ? '' : 'uk-form-danger'}`}\r\n                            onChange={onChange}/>\r\n                        <small style={{ color: \"red\", display: form.validreservationEmail ? \"none\" : \"\" }}>Email is not valid</small>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport getPassengerForm from 'models/passenger';\r\nimport ResvPassenger from './ResvPassenger';\r\nimport UIkit from 'uikit';\r\nimport { validateEmailFormat } from 'utils/validators'\r\n\r\nexport class FlightReservationMain extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // limit: allowed number of passengers on each reservation\r\n            // maximum passengers for a reservation is 5\r\n            seatsLeft: props.SEATS_LEFT() < 5 ? props.SEATS_LEFT() : 5,\r\n            passengers: [getPassengerForm()]\r\n        }\r\n    }\r\n\r\n    getPassengerFormView = () => this.state.passengers.map((passengerForm, id) =>\r\n        <ResvPassenger\r\n            key={id}\r\n            id={id} // id is index of passengers array\r\n            form={passengerForm}\r\n            onChange={this.handleChangePassengerForm}\r\n            onRemove={this.handleRemovePassengerForm}\r\n        />\r\n    )\r\n\r\n    handleAddNewPassengerForm = e => {\r\n        var { seatsLeft, passengers } = this.state\r\n        if (passengers.length === seatsLeft) return alert(`Reached maximum of ${seatsLeft} passengers`)\r\n        var newPassengers = passengers\r\n        newPassengers.push(getPassengerForm())\r\n        this.setState({ passengers: newPassengers })\r\n    }\r\n\r\n    handleRemovePassengerForm = id => {\r\n        var { passengers } = this.state\r\n        if (passengers.length === 1) return alert(`Cannot continue reservation with no passenger`)\r\n        var newPassengers = passengers\r\n        newPassengers.splice(id, 1) // e.target.id is index of passengers array\r\n        this.setState({ passengers: newPassengers })\r\n    }\r\n\r\n    handleChangePassengerForm = e => {\r\n        var { passengers } = this.state\r\n        var newPassengers = passengers\r\n        newPassengers[e.target.id][e.target.name] = e.target.value  // e.target.id is index of passengers array\r\n        newPassengers[e.target.id][`valid${e.target.name}`] = true // reset validation\r\n        if (e.target.name === \"sendConfirmation\" && e.target.value === \"no\") {\r\n            newPassengers[e.target.id].reservationEmail = \"\"\r\n            newPassengers[e.target.id].validreservationEmail = true\r\n        }\r\n        this.setState({ passengers: newPassengers })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        let valid = true\r\n        let passengers = this.state.passengers\r\n        let seenID = []\r\n        for (var i in passengers) {\r\n            let { firstName, lastName, middleInitial, reservationEmail, IDNumber, sendConfirmation } = passengers[i]\r\n            let validfirstName = firstName.length > 1\r\n            let validlastName = lastName.length > 1\r\n            let validmiddleInitial = middleInitial.length === 0 || (middleInitial.length > 0 && isNaN(middleInitial))\r\n            let validreservationEmail = sendConfirmation === \"no\" || (reservationEmail.length > 0 && validateEmailFormat(reservationEmail))\r\n            let validIDNumber = IDNumber.length > 5\r\n            if (!validfirstName || !validlastName || !validmiddleInitial || !validreservationEmail || !validIDNumber) {\r\n                passengers[i] = {\r\n                    ...passengers[i],\r\n                    validfirstName, validlastName, validmiddleInitial,\r\n                    validreservationEmail, validIDNumber\r\n                }\r\n                valid = false\r\n            }\r\n            if (validIDNumber && !seenID.includes(IDNumber)) {\r\n                seenID.push(IDNumber)\r\n            }\r\n        }\r\n        if (!valid) {\r\n            return this.setState({ passengers })\r\n        }\r\n        if (seenID.length !== this.state.passengers.length) {\r\n            return UIkit.notification(\"Found duplicate ID\", { status: 'danger', timeout: 2000 })\r\n        }\r\n\r\n        const getFlightClass = flight => {\r\n            return flight.ecoPrice ? \"economy\" : \"business\"\r\n        }\r\n\r\n        let departFlight = this.props.children[0].props.selectedDepartFlight\r\n        departFlight.flightClass = getFlightClass(departFlight)\r\n        let returnFlight = this.props.children[1] ? this.props.children[1].props.selectedReturnFlight : undefined\r\n        if (returnFlight) {\r\n            returnFlight.flightClass = this.props.children[1] ? getFlightClass(returnFlight) : undefined\r\n        }\r\n        this.props.finalizeBooking({ departFlight, returnFlight, passengers })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"uk-margin-auto@s uk-width-1-1\" uk-grid=\"\">\r\n                <div className=\"uk-width-1-1\" uk-grid=\"\">\r\n                    <ul className=\"uk-width-1-1\" uk-accordion=\"\" style={{ background: \"white\" }}>\r\n                        <li>\r\n                            <a className=\"uk-accordion-title\" href=\"#flight-summary\">Flight Summary</a>\r\n                            <div className=\"uk-accordion-content\">\r\n                                {this.props.children}\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"uk-width-1-1 uk-padding-remove\">\r\n                        <button className=\"uk-button uk-button-primary\"\r\n                            onClick={this.handleAddNewPassengerForm}>\r\n                            <span className=\"uk-margin-small-right\" uk-icon=\"plus\"></span>\r\n                            Add Passenger\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {this.getPassengerFormView()}\r\n                <form className=\"uk-width-1-1 uk-flex uk-flex-right uk-margin-large-right\" onSubmit={this.handleSubmit}>\r\n                    <button className=\"uk-button uk-button-primary\" type=\"submit\">Finish</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    finalizeBooking: payload => dispatch({ type: \"FINALIZE_BOOKING\", payload })\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FlightReservationMain)\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SearchField from 'components/FlightSearch/SearchField';\r\nimport FlightSearchResults from 'components/FlightSearch/FlightSearchResults';\r\nimport FlightReservationMain from 'components/FlightReservation/FlightReservationMain'\r\nimport FlightSummary from 'components/FlightSummary'\r\n\r\nclass Booking extends Component {\r\n    componentDidMount = () => {\r\n        this.props.getAirportList()\r\n        if (!this.props.searchResultsLoaded && this.props.currentStep === 1) {\r\n            // reload search result when user refreshes FlightSearchResults page\r\n            this.props.reloadSearchResults()\r\n        }\r\n    }\r\n\r\n    getView = () => {\r\n        var { searchResultsLoaded,\r\n            currentStep, isRoundTrip,\r\n            validForReservation, toReservation,\r\n            flightDepartFrom, flightArriveTo,\r\n            flightFromDate, flightToDate,\r\n            departFlightTime, returnFlightTime,\r\n            departFlights, returnFlights,\r\n            selectedDepartFlight, selectedReturnFlight } = this.props\r\n        switch (currentStep) {\r\n            case 0:\r\n                return <SearchField />\r\n            case 1:\r\n                return (\r\n                    <React.Fragment>\r\n                        {\r\n                            searchResultsLoaded &&\r\n                            <React.Fragment>\r\n                                <FlightSearchResults type={'Depart'} flights={departFlights} />\r\n                                {\r\n                                    isRoundTrip &&\r\n                                    <FlightSearchResults type={'Return'} flights={returnFlights} />\r\n                                }\r\n                                {\r\n                                    validForReservation &&\r\n                                    <div className=\"uk-width-1-1\">\r\n                                        <button className=\"uk-button uk-button-primary uk-padding\" onClick={() => toReservation()}>\r\n                                            Continue To Reservation\r\n                                    </button>\r\n                                    </div>\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                    </React.Fragment>\r\n                )\r\n            case 2:\r\n                return (\r\n                    <FlightReservationMain\r\n                        SEATS_LEFT={() => {\r\n                            var departSeats = selectedDepartFlight.ecoSeats || selectedDepartFlight.busSeats\r\n                            var returnSeats = selectedReturnFlight ? selectedReturnFlight.ecoSeats || selectedReturnFlight.busSeats : 5\r\n                            return departSeats < returnSeats ? departSeats : returnSeats\r\n                        }}\r\n                    >\r\n                        <FlightSummary\r\n                            selectedDepartFlight={{ ...selectedDepartFlight, flightDepartFrom, flightArriveTo }}\r\n                            TYPE=\"Depart\"\r\n                            DEPART_FROM={flightDepartFrom}\r\n                            ARRIVE_TO={flightArriveTo}\r\n                            SELECTED_DATE={new Date(flightFromDate)}\r\n                            FLIGHT_TIME={[departFlightTime.depTime, departFlightTime.arrTime]}\r\n                        />\r\n                        {\r\n                            isRoundTrip &&\r\n                            <FlightSummary\r\n                                selectedReturnFlight={{ ...selectedReturnFlight, flightDepartFrom, flightArriveTo }}\r\n                                TYPE=\"Return\"\r\n                                DEPART_FROM={flightArriveTo}\r\n                                ARRIVE_TO={flightDepartFrom}\r\n                                SELECTED_DATE={new Date(flightToDate)}\r\n                                FLIGHT_TIME={[returnFlightTime.depTime, returnFlightTime.arrTime]}\r\n                            />\r\n                        }\r\n                    </FlightReservationMain>\r\n                )\r\n            default:\r\n                return <React.Fragment></React.Fragment>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"uk-flex uk-margin-auto uk-width-1-1\" uk-grid=\"\">\r\n                {this.getView()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loaded: state.booking.loaded,\r\n    searchResultsLoaded: state.booking.searchResultsLoaded,\r\n    currentStep: state.booking.current,\r\n    isRoundTrip: state.booking.isRoundTrip,\r\n    validForReservation: state.booking.validForReservation,\r\n    flightDepartFrom: state.booking.searchInputs.flightFrom,\r\n    flightArriveTo: state.booking.searchInputs.flightTo,\r\n    flightFromDate: state.booking.dateInputs.fromDate,\r\n    flightToDate: state.booking.dateInputs.toDate,\r\n    departFlightTime: state.booking.ticket.departFlight,\r\n    returnFlightTime: state.booking.ticket.returnFlight,\r\n    departFlights: state.booking.departFlights,\r\n    returnFlights: state.booking.returnFlights,\r\n    selectedDepartFlight: state.booking.ticket.departFlight,\r\n    selectedReturnFlight: state.booking.ticket.returnFlight,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getAirportList: () => dispatch({ type: \"AIRPORT_GET_LIST\" }),\r\n    reloadSearchResults: () => dispatch({ type: \"BOOKING_APPLY_SEARCH\" }),\r\n    toReservation: () => dispatch({ type: \"BOOKING_TO_RESERVATION\" })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Booking);\r\n\r\n","import Welcome from \"pages/Welcome\"\r\nimport Dashboard from \"pages/Dashboard\";\r\nimport BookingDetail from \"pages/BookingDetail\"\r\nimport UserProfile from 'pages/UserProfile'\r\nimport Booking from \"pages/Booking\";\r\nimport P404 from \"pages/P404\";\r\n\r\nimport DevTest from \"Test/DevTest\";\r\nimport RecoveryPassword from \"pages/RecoveryPassword\";\r\n\r\nconst routes = [\r\n    {\r\n        id: \"welcome\",\r\n        requiredAuthentication: true,\r\n        exact: true,\r\n        path: \"/\",\r\n        HomePage: Welcome\r\n    },\r\n    {\r\n        id: \"dashboard\",\r\n        requiredAuthentication: true,\r\n        exact: true,\r\n        path: \"/dashboard\",\r\n        component: Dashboard,\r\n        navItemName: \"Dashboard\",\r\n    },\r\n    {\r\n        id: \"bookingdetail\",\r\n        requiredAuthentication: true,\r\n        exact: true,\r\n        path: \"/booking=:detail\",\r\n        component: BookingDetail\r\n    },\r\n    {\r\n        id: \"profile\",\r\n        requiredAuthentication: true,\r\n        exact: true,\r\n        path: \"/profile\",\r\n        component: UserProfile,\r\n        navItemName: \"User Profile\",\r\n    },\r\n    {\r\n        id: \"booking\",\r\n        requiredAuthentication: true,\r\n        exact: true,\r\n        path: \"/booking\",\r\n        component: Booking,\r\n        navItemName: \"Booking Flight\",\r\n    },\r\n    {\r\n        id: \"recoverylink\",\r\n        exact: true,\r\n        path: \"/rl=:link\",\r\n        component: RecoveryPassword\r\n    },\r\n    {\r\n        // this route (path=\"\") is used for testing purpose only, will be removed in final release\r\n        id: \"devtest\",\r\n        exact: true,\r\n        path: \"/devtest\",\r\n        component: DevTest\r\n    },\r\n    {\r\n        id: \"notfound\",\r\n        path: \"*\",\r\n        component: P404\r\n    }\r\n]\r\n\r\nexport default routes;","import React from 'react'\r\nimport SignIn from 'components/SignIn'\r\nimport ForgotPassword from 'components/ForgotPassword'\r\nimport SignUp from 'components/SignUp'\r\n\r\nexport default function Welcome() {\r\n    document.title = \"AST6 | Home\"\r\n    return (\r\n        <div className=\"uk-background-cover\" style={{backgroundImage:\"url(media/welcome-bg.png)\"}} uk-height-viewport=\"expand: true\">\r\n            <div className=\"uk-overlay uk-overlay-default uk-position-top uk-width-1-1 uk-text-center uk-margin-medium-top\">\r\n                <div className=\"uk-width-1-2@s uk-align-center\">\r\n                    <h1 style={{ color: \"dodgerblue\", fontWeight: \"bold\" }}>AST6 Airline Online Services</h1>\r\n                    <SignIn />\r\n                </div>\r\n            </div>\r\n            <ForgotPassword />\r\n            <SignUp />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BookingDetailSummary from 'components/BookingDetail/BookingDetailSummary'\r\nimport BookingDetailPassengers from '../components/BookingDetail/BookingDetailPassengers';\r\n\r\nexport default function BookingDetail(props) {\r\n    const bookingDetails = props.computedMatch.params.detail.split('_')\r\n    const bookingNumber = bookingDetails[0]\r\n    const [departFrom, departTime] = bookingDetails[1].split('|')\r\n    const [arriveTo, arriveTime] = bookingDetails[2].split('|')\r\n\r\n    const dispatch = useDispatch()\r\n    const { bookingPassengers } = useSelector(state => ({\r\n        bookingPassengers: state.user.bookingPassengers\r\n    }))\r\n\r\n    const [initialLoaded, setInitialLoaded] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!initialLoaded) {\r\n            dispatch({\r\n                type: \"GET_BOOKING_DETAIL\",\r\n                bookingNumber\r\n            })\r\n            setInitialLoaded(true)\r\n        }\r\n    }, [initialLoaded, bookingNumber])\r\n\r\n    return (\r\n        <div className=\"uk-width-1-1 uk-margin-top\" style={{ background: \"white\" }} uk-grid=\"\">\r\n            <h4>Booking Detail Summary</h4>\r\n            <BookingDetailSummary\r\n                DEPART_FROM={departFrom}\r\n                ARRIVE_TO={arriveTo}\r\n                DEPART_TIME={departTime}\r\n                ARRIVE_TIME={arriveTime}\r\n            />\r\n            {\r\n                bookingPassengers &&\r\n                <BookingDetailPassengers {...props} bookingNumber={bookingNumber} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport UserInfo from 'components/UserProfile/UserInfo'\r\nimport UpdatePassword from 'components/UserProfile/UpdatePassword'\r\nimport UserPreference from 'components/UserProfile/UserPreference'\r\n\r\nexport default function UserProfile() {\r\n    return (\r\n        <ul id=\"user-profile\" className='uk-width-1-1 uk-card uk-card-default uk-margin-auto'\r\n            uk-grid=''\r\n            uk-accordion=''>\r\n            <UserInfo />\r\n            <UpdatePassword />\r\n            <UserPreference />\r\n        </ul >\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { validateStrongPassword } from 'utils/validators';\r\nimport PasswordField from 'components/PasswordField';\r\n\r\nexport default function RecoveryPassword(props) {\r\n    const dispatch = useDispatch()\r\n    const { confirmed } = useSelector(state => ({ confirmed: state.user.confirmedRecoveryLink }))\r\n    const link = props.match.params.link\r\n\r\n    const [status, setStatus] = useState(false)\r\n    const [inputs, setInputs] = useState({ newPassword: '', confirmNewPassword: '' })\r\n    const [valids, setValids] = useState({ newPassword: true, confirmNewPassword: true })\r\n\r\n    const handleChange = e => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n        setValids({ ...valids, [e.target.name]: true })\r\n    }\r\n\r\n    const handleOnFocusPassword = e => {\r\n        setInputs({ newPassword: '', confirmNewPassword: '' })\r\n        setValids({ newPassword: true, confirmNewPassword: true })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { newPassword, confirmNewPassword } = inputs\r\n        let validPassword = newPassword.length > 5 && validateStrongPassword(newPassword)\r\n        let validconfirmPassword = confirmNewPassword.length > 5 && confirmNewPassword === newPassword\r\n        if (!validPassword || !validconfirmPassword) {\r\n            return setValids({ newPassword: validPassword, confirmNewPassword: validconfirmPassword })\r\n        }\r\n\r\n        dispatch({ type: \"UPDATE_PASSWORD\", payload: { link, newPassword } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (confirmed) {\r\n            setStatus(true)\r\n        } else {\r\n            dispatch({ type: \"CONFIRM_RECOVERY_LINK\", link })\r\n        }\r\n    }, [confirmed])\r\n\r\n    return (\r\n        <div className=\"uk-margin-auto uk-width-1-3@s uk-padding-small\" onSubmit={handleSubmit}>\r\n            {\r\n                status &&\r\n                <form>\r\n                    <h3>Enter new password</h3>\r\n                    <PasswordField\r\n                        passwordId=\"newPassword\"\r\n                        passwordValue={inputs.newPassword}\r\n                        isValidPassword={valids.newPassword}\r\n                        confirmPasswordId=\"confirmNewPassword\"\r\n                        isValidConfirmPassword={valids.confirmNewPassword}\r\n                        confirmPasswordValue={inputs.confirmNewPassword}\r\n                        onChange={handleChange}\r\n                        onFocus={handleOnFocusPassword}\r\n                    />\r\n                    <div className=\"uk-margin-small-top uk-width-1-1 uk-flex uk-flex-right\">\r\n                        <button className=\"uk-button uk-button-default\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport BookingDetailPassengers from \"../components/BookingDetail/BookingDetailPassengers\";\r\n\r\nexport default function DevTest() {\r\n  return (\r\n    <div>\r\n      <small>\r\n        <p>Put your component to test here </p>\r\n        <p>\r\n          After you are statisfied with the look and feel or functions, please\r\n          remove it\r\n        </p>\r\n        <p>After group review, it can be integrated and adjusted </p>\r\n      </small>\r\n      <hr style={{ borderTop: \"4px solid #151414\" }} />\r\n\r\n      {/* Add Component here */}\r\n      <BookingDetailPassengers />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function P404() {\r\n    return (\r\n        <div style={{fontSize: 80, fontFamily: 'QuickSand', paddingTop: 40, paddingLeft: 40, color: \"blue\"}}>\r\n            404! Page Not Found\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { generateNavItems } from 'utils/generators'\r\nimport routes from 'models/routes'\r\n\r\nexport default function NavBar(props) {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <React.Fragment>\r\n            <div uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky\">\r\n                <nav className=\"uk-navbar-container\" uk-navbar=\"\">\r\n                    <div className=\"uk-navbar-left\">\r\n                        <ul className=\"uk-navbar-nav\">\r\n                            {generateNavItems(routes, props.currentViewPath)}\r\n                            <li><a href=\"#sign-out\" onClick={e => { e.preventDefault(); dispatch({ type: \"SIGN_OUT\" }) }}>\r\n                                Sign Out\r\n                            </a></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <div style={{ backgroundColor: \"darkgrey\" }} uk-height-viewport=\"offset-top: true\">\r\n                {props.content || props.children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nexport default function AuthenticatedRoute(props) {\r\n    const { authenticated, defaultAuthenticatedPath, HomePage, component: Component, ...rest } = props\r\n    return (\r\n        <Route {...rest} render={({ history }) =>\r\n            authenticated ?\r\n                (\r\n                    Component ?\r\n                        <NavBar currentViewPath={history.location.pathname} content={<Component {...props} />} />\r\n                        :\r\n                        <Redirect to={defaultAuthenticatedPath} />\r\n                )\r\n                :\r\n                (\r\n                    HomePage ?\r\n                        <HomePage />\r\n                        :\r\n                        <Redirect to=\"/\" />\r\n                )\r\n        } />\r\n    )\r\n}\r\n","const types = {\r\n    // Spinner\r\n    LOADING: \"LOADING\",\r\n    LOADED: \"LOADED\",\r\n\r\n    // Background\r\n    SIGNED_IN: \"SIGNED_IN\",\r\n    SET_AUTHENTICATED: \"SET_AUTHENTICATED\",\r\n    SET_UNAUTHENTICATED: \"SET_UNAUTHENTICATED\",\r\n\r\n    // User\r\n    SIGN_UP: \"SIGN_UP\",\r\n    SIGN_IN: \"SIGN_IN\",\r\n    SET_USER: \"SET_USER\",\r\n    SIGN_OUT: \"SIGN_OUT\",\r\n    SEND_RECOVERY_LINK: \"RECOVERY_LINK\",\r\n    CONFIRM_RECOVERY_LINK: \"CONFIRM_RECOVERY_LINK\",\r\n    UPDATE_PASSWORD: \"UPDATE_PASSWORD\",\r\n    UPDATE_PREFERENCE: \"UPDATE_PREFERENCE\",\r\n    USER_GET_FLIGHTS: \"USER_GET_FLIGHTS\",\r\n    GET_BOOKING_DETAIL: \"GET_BOOKING_DETAIL\",\r\n    UPDATE_BOOKING: \"UPDATE_BOOKING\",\r\n    CANCEL_BOOKING: \"CANCEL_BOOKING\",\r\n\r\n    // Booking\r\n    INIT_LOAD: \"BOOKING_INIT_LOAD\",\r\n    APPLY_SEARCH: \"BOOKING_APPLY_SEARCH\",\r\n    GO_SEARCH: \"BOOKING_GO_SEARCH\",\r\n    IS_NEXT_RESERVATION: \"BOOKING_IS_NEXT_RESERVATION\",\r\n    TO_RESERVATION: \"BOOKING_TO_RESERVATION\",\r\n    FINALIZE_BOOKING: \"FINALIZE_BOOKING\",\r\n\r\n    // Airport\r\n    GET_AIRPORTS: \"AIRPORT_GET_LIST\",\r\n}\r\n\r\nexport default types","import types from \"../types\"\r\n\r\nconst initialState = {\r\n    authenticated: null,\r\n    loading: false,\r\n}\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.SET_AUTHENTICATED:\r\n            return { ...state, authenticated: true }\r\n        case types.SET_UNAUTHENTICATED:\r\n            return { ...state, authenticated: false }\r\n        default:\r\n            return state\r\n    }\r\n}","import types from \"../types\";\r\nimport converter from \"utils/converter\"\r\nimport flightTimeOptions from 'models/flightTimeOptions';\r\nimport flightClassOptions from 'models/flightClassOptions';\r\nimport sortByOptions from 'models/sortByOptions';\r\n\r\nconst initialState = {\r\n  info: null,\r\n  preference: null,\r\n  confirmedRecoveryLink: false,\r\n  DEFAULT_MAX_PRICE: 2000,\r\n  flights: [],\r\n  bookingPassengers: undefined,\r\n}\r\n\r\nconst getPreference = payload => {\r\n  return {\r\n    departTime: converter.optionIdToText(flightTimeOptions, payload.departTimeId),\r\n    arriveTime: converter.optionIdToText(flightTimeOptions, payload.arriveTimeId),\r\n    flightClass: converter.optionIdToText(flightClassOptions, payload.flightClassId),\r\n    maxPrice: payload.maxPrice,\r\n    sortBy: converter.optionIdToText(sortByOptions, payload.sortById),\r\n  }\r\n}\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.SET_USER:\r\n      return {\r\n        ...state,\r\n        info: { ...action.info },\r\n        preference: getPreference(action.preference)\r\n      }\r\n    case \"SET_CONFIRM_STATUS\":\r\n      return { ...state, confirmedRecoveryLink: action.status }\r\n    case \"SET_PREFERENCE\":\r\n      return { ...state, preference: getPreference(action.preference) }\r\n    case \"SET_USER_FLIGHTS\":\r\n      return { ...state, flights: action.flights }\r\n    case \"SET_UPDATED_BOOKING_DETAIL\":\r\n      let newBookingPassengers = state.bookingPassengers\r\n      newBookingPassengers[action.id].isChecked = action.isChecked\r\n      return { ...state, bookingPassengers: newBookingPassengers }\r\n    case \"SET_USER_BOOKING_DETAIL\":\r\n      return { ...state, bookingPassengers: action.bookingPassengers }\r\n    default:\r\n      return state\r\n  }\r\n}","const sessionName = 'bk'\r\n\r\nconst initial = {\r\n    current: 0 // current component: Search -> Result -> Reservation\r\n}\r\n\r\nconst createSession = () => {\r\n    var session = getSession()\r\n    if (!session) setSession(initial)\r\n}\r\n\r\nconst setSession = session => {\r\n    sessionStorage.setItem(sessionName, JSON.stringify(session))\r\n}\r\n\r\nconst getSession = () => {\r\n    return JSON.parse(sessionStorage.getItem(sessionName))\r\n}\r\n\r\nconst get = key => {\r\n    var session = getSession()\r\n    if (session) return session[key]\r\n}\r\n\r\nconst set = (key, value) => {\r\n    var session = getSession()\r\n    if (session) {\r\n        session[key] = value\r\n        return setSession(session)\r\n    }\r\n}\r\n\r\nconst bookingSession = {\r\n    getAll: () => {\r\n        createSession()\r\n        return getSession()\r\n    },\r\n    get: key => {\r\n        var session = getSession()\r\n        if (session) return session[key]\r\n    },\r\n    navNext: () => {\r\n        set(\"current\", get(\"current\") + 1)\r\n    },\r\n    navTo: i => {\r\n        set(\"current\", i)\r\n    },\r\n    remove: () => {\r\n        sessionStorage.removeItem(sessionName)\r\n    }\r\n}\r\n\r\nexport default bookingSession","const sessionName = 'srch'\r\n\r\nconst initial = {\r\n    isRoundTrip: false,\r\n    searchInputs: {\r\n        flightFrom: '',\r\n        flightTo: '',\r\n    },\r\n    dateInputs: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    arriveTimeId: '',\r\n    departTimeId: '',\r\n    numOfPassengers: 1,\r\n    flightClassId: '',\r\n    maxPrice: 0,\r\n    sortById: '',\r\n}\r\n\r\nconst createSession = () => {\r\n    var session = getSession()\r\n    if (!session) setSession(initial)\r\n}\r\n\r\nconst setSession = session => {\r\n    sessionStorage.setItem(sessionName, JSON.stringify(session))\r\n}\r\n\r\nconst getSession = () => {\r\n    return JSON.parse(sessionStorage.getItem(sessionName))\r\n}\r\n\r\nconst searchSession = {\r\n    getAll: () => {\r\n        createSession()\r\n        return getSession()\r\n    },\r\n    get: key => {\r\n        var session = getSession()\r\n        if (session) return session[key]\r\n    },\r\n    set: (key, value) => {\r\n        createSession()\r\n        var session = getSession()\r\n        if (session) {\r\n            session[key] = value\r\n            return setSession(session)\r\n        }\r\n    },\r\n    // els is an object of pairs of key and value\r\n    setMultiple: el => {\r\n        createSession()\r\n        var session = getSession()\r\n        if (session) {\r\n            Object.keys(el).forEach(key => {\r\n                session[key] = el[key]\r\n            });\r\n            return setSession(session)\r\n        }\r\n    },\r\n    remove: () => {\r\n        sessionStorage.removeItem(sessionName)\r\n    }\r\n}\r\n\r\nexport default searchSession","const sessionName = 'tkt'\r\n\r\nconst initial = {\r\n    ticket: {\r\n        departFlight: null,\r\n        returnFlight: null,\r\n    }\r\n}\r\n\r\nconst createSession = () => {\r\n    var session = getSession()\r\n    if (!session) setSession(initial)\r\n}\r\n\r\nconst setSession = session => {\r\n    sessionStorage.setItem(sessionName, JSON.stringify(session))\r\n}\r\n\r\nconst getSession = () => {\r\n    return JSON.parse(sessionStorage.getItem(sessionName))\r\n}\r\n\r\nconst searchSession = {\r\n    getAll: () => {\r\n        createSession()\r\n        return getSession()\r\n    },\r\n    get: key => {\r\n        var session = getSession()\r\n        if (session) return session[key]\r\n    },\r\n    set: (key, value) => {\r\n        var session = getSession()\r\n        if (session) {\r\n            session.ticket[key] = value\r\n            return setSession(session)\r\n        }\r\n    },\r\n    validForReservation: isRoundTrip => {\r\n        var session = getSession()\r\n        if (session) {\r\n            const { departFlight, returnFlight } = session.ticket\r\n            return (isRoundTrip && departFlight !== null && returnFlight !== null) || (!isRoundTrip && departFlight !== null)\r\n        }\r\n        return false\r\n    },\r\n    clearSession: () => setSession(initial),\r\n    remove: () => {\r\n        sessionStorage.removeItem(sessionName)\r\n    }\r\n}\r\n\r\nexport default searchSession","import bookingSession from 'sessions/bookingSession';\r\nimport searchSession from 'sessions/searchSession';\r\nimport ticketSession from 'sessions/ticketSession';\r\n\r\nconst initialState = {\r\n    ...bookingSession.getAll(),\r\n    ...searchSession.getAll(),\r\n    ...ticketSession.getAll(),\r\n    validForReservation: ticketSession.validForReservation(searchSession.get('isRoundTrip')),\r\n    departFlights: undefined,\r\n    returnFlights: undefined,\r\n    searchResultsLoaded: false\r\n}\r\n\r\nexport default function bookingReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_APPLY_SEARCH\": // after apply, move to next Step in Booking\r\n            searchSession.setMultiple({ ...action.payload })\r\n            var current = state.current\r\n            if (!action.isReload) {\r\n                bookingSession.navNext()\r\n                current += 1\r\n            }\r\n            return { ...state, ...action.payload, ...action.ticketList, current, searchResultsLoaded: true }\r\n        case \"SET_VALID_TO_RESERVATION\":\r\n            ticketSession.set(action.tripType, action.selected)\r\n            var validForReservation = ticketSession.validForReservation(state.isRoundTrip)\r\n            return { ...state, ...ticketSession.getAll(), validForReservation }\r\n        case \"SET_TO_RESERVATION\": // after apply, move to next Step in Booking\r\n            bookingSession.navNext()\r\n            return { ...state, current: state.current + 1 }\r\n        case \"SET_GO_SEARCH\":\r\n            bookingSession.navTo(0)\r\n            ticketSession.clearSession()\r\n            return { ...state, validForReservation: false, ticket: { departFlight: null, returnFlight: null }, current: 0 }\r\n        case \"SET_FINALIZE_BOOKING\":\r\n            // clear all session for booking\r\n            bookingSession.remove()\r\n            searchSession.remove()\r\n            ticketSession.remove()\r\n            return { ...state }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","const initialState = {\r\n    list: []\r\n}\r\n\r\nexport default function airportReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_AIRPORTS\":\r\n            return { ...state, list: action.airportList }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport background from './reducers/background'\r\nimport user from './reducers/user'\r\nimport booking from './reducers/booking'\r\nimport airport from './reducers/airport'\r\n\r\n// component reducers\r\n\r\n// feature reducers\r\n\r\nexport default combineReducers({\r\n    background,\r\n    user,\r\n    booking,\r\n    airport\r\n});\r\n","const AppRoot = \"/api\"\r\nconst userRoot = \"/api/user\"\r\nconst airportRoot = \"/api/airport\"\r\nconst flightRoot = \"/api/flight\"\r\n\r\nconst urls = {\r\n    App: {\r\n        load: `${AppRoot}`,\r\n    },\r\n    user: {\r\n        signedin: `${userRoot}/signedin`,\r\n        signup: `${userRoot}/signup`,\r\n        signin: `${userRoot}/signin`,\r\n        signout: `${userRoot}/signout`,\r\n        recoverylink: `${userRoot}/recoverylink`,\r\n        confirmrecoverylink: `${userRoot}/confirmrecoverylink`,\r\n        updatepassword: `${userRoot}/updatepassword`,\r\n        updatepreference: `${userRoot}/updatepreference`,\r\n        getflights: `${userRoot}/getflights`,\r\n        getbookingdetail: `${userRoot}/getbookingdetail`,\r\n        cancelbooking: `${userRoot}/cancelbooking`,\r\n    },\r\n    airport: {\r\n        getlist: `${airportRoot}`\r\n    },\r\n    flight: {\r\n        searchflight: `${flightRoot}`,\r\n        finalizebooking: `${flightRoot}/finalizebooking`\r\n    },\r\n}\r\n\r\nexport default urls","import urls from \"./urls\"\r\n\r\nimport axios from \"axios\"\r\n\r\nconst services = {\r\n    // background\r\n    signedIn: () => { return axios.get(urls.user.signedin) },\r\n\r\n\r\n    // user\r\n    signUp: payload => { return axios.post(urls.user.signup, payload) },\r\n    signIn: payload => { return axios.post(urls.user.signin, payload) },\r\n    signOut: () => { return axios.get(urls.user.signout) },\r\n    sendRecoveryLink: email => { return axios.get(`${urls.user.recoverylink}?email=${email}`) },\r\n    confirmRecoveryLink: link => { return axios.get(`${urls.user.confirmrecoverylink}?link=${link}`) },\r\n    updatePassword: payload => { return axios.post(urls.user.updatepassword, payload) },\r\n    updatePreference: payload => { return axios.put(urls.user.updatepreference, payload) },\r\n    getFlights: () => { return axios.get(urls.user.getflights) },\r\n    getBookingDetail: bookingNumber => { return axios.get(`${urls.user.getbookingdetail}?bn=${bookingNumber}`) },\r\n    cancelBooking: payload => { return axios.post(`${urls.user.cancelbooking}`, payload) },\r\n\r\n    // airport\r\n    getAirportList: () => { return axios.get(urls.airport.getlist) },\r\n\r\n    // flight\r\n    searchFlight: reqConditions => { return axios.get(urls.flight.searchflight + \"?\" + reqConditions) },\r\n    finalizeBooking: payload => { return axios.post(urls.flight.finalizebooking, payload) },\r\n}\r\n\r\nexport default services ","import { all, call, put } from 'redux-saga/effects'\r\nimport types from '../types'\r\nimport services from '../../apis/services'\r\n\r\nfunction* SIGNED_IN() {\r\n    let ret = yield call(services.signedIn)\r\n    if (ret.data !== \"\") {\r\n        yield put({ type: types.SET_USER, info: { ...ret.data.info }, preference: { ...ret.data.preference } })\r\n        yield put({ type: types.SET_AUTHENTICATED })\r\n    } else {\r\n        sessionStorage.clear()\r\n        yield put({ type: types.SET_UNAUTHENTICATED })\r\n    }\r\n}\r\n\r\nexport default function* backgroundSaga() {\r\n    yield all([\r\n        SIGNED_IN()\r\n    ])\r\n}","import { all, takeLatest, call, put, takeEvery } from 'redux-saga/effects'\r\nimport types from '../types'\r\nimport services from '../../apis/services'\r\nimport UIkit from 'uikit'\r\n\r\nfunction* SIGN_UP({ payload, callback }) {\r\n    try {\r\n        let response = yield call(services.signUp, payload)\r\n        callback(response.data)\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* SIGN_IN({ payload }) {\r\n    try {\r\n        let ret = yield call(services.signIn, payload)\r\n        if (ret && ret.data !== \"\") {\r\n            let retUser = ret.data\r\n            yield put({ type: types.SET_USER, info: { ...retUser.info }, preference: { ...retUser.preference } })\r\n            yield put({ type: types.SET_AUTHENTICATED })\r\n            UIkit.notification(`Successfully signed in as: ${retUser.info.firstName}`, { timeout: 2000 });\r\n        } else {\r\n            UIkit.notification(\"Email/ password is not correct\", { timeout: 2000 })\r\n        }\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* SIGN_OUT() {\r\n    try {\r\n        yield call(services.signOut)\r\n        // clean up or logic after sign out\r\n        sessionStorage.clear()\r\n        // update state for DOM\r\n        yield put({ type: types.SET_UNAUTHENTICATED })\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* SEND_RECOVERY_LINK({ email }) {\r\n    try {\r\n        let retResult = yield call(services.sendRecoveryLink, email)\r\n        if (retResult.data === \"success\") {\r\n            UIkit.modal.dialog(\r\n                \"<p class='uk-modal-body' style='color:green;'>Successfully sent recovery link. If you don't see it, please check Spam box</p>\"\r\n            )\r\n            return UIkit.modal(\"#forgotPassword\").hide()\r\n        }\r\n        UIkit.notification(retResult.data, { status: 'danger', timeout: 2000 })\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* CONFIRM_RECOVERY_LINK({ link }) {\r\n    let status = false\r\n    try {\r\n        yield call(services.confirmRecoveryLink, link)\r\n        status = true\r\n    } catch (e) {\r\n        if (e.message.endsWith(\"404\")) {\r\n            UIkit.notification(\"Recovery link expired\", { status: 'danger', timeout: 3000 })\r\n            return setTimeout(() => window.location.href = \"/\", 3500)\r\n        }\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n    yield put({\r\n        type: \"SET_CONFIRM_STATUS\",\r\n        status\r\n    })\r\n}\r\n\r\nfunction* UPDATE_PASSWORD({ payload }) {\r\n    try {\r\n        yield call(services.updatePassword, payload)\r\n        UIkit.notification(`Successfully updated new password${payload.ID ? \"\" : \". Please sign in\"}`, { status: 'success', timeout: 3000 })\r\n        if (payload.link) {\r\n            // for Recovery Password\r\n            return setTimeout(() => window.location.href = \"/\", 3500)\r\n        } else {\r\n            // User update password\r\n            UIkit.accordion(\"#user-profile\").toggle(1) // close User Password\r\n        }\r\n    } catch (e) {\r\n        if (e.message.endsWith(\"500\")) {\r\n            return UIkit.notification(\"Current Password is not correct\", { status: 'danger', timeout: 2000 })\r\n        }\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* UPDATE_PREFERENCE({ payload }) {\r\n    try {\r\n        yield call(services.updatePreference, payload)\r\n        yield put({\r\n            type: \"SET_PREFERENCE\",\r\n            preference: payload\r\n        })\r\n        UIkit.notification(`Successfully updated preference`, { status: 'success', timeout: 3000 })\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* USER_GET_FLIGHTS() {\r\n    try {\r\n        let retResult = yield call(services.getFlights)\r\n        yield put({\r\n            type: \"SET_USER_FLIGHTS\",\r\n            flights: retResult.data\r\n        })\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* GET_BOOKING_DETAIL({ bookingNumber }) {\r\n    try {\r\n        let retResult = yield call(services.getBookingDetail, bookingNumber)\r\n        yield put({\r\n            type: \"SET_USER_BOOKING_DETAIL\",\r\n            bookingPassengers: retResult.data\r\n        })\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nfunction* UPDATE_BOOKING({ id, isChecked }) {\r\n    yield put({\r\n        type: \"SET_UPDATED_BOOKING_DETAIL\",\r\n        id,\r\n        isChecked\r\n    })\r\n}\r\n\r\nfunction* CANCEL_BOOKING({ path, bookingNumber, cancellations, originalList }) {\r\n    try {\r\n        UIkit.modal.confirm('Are you sure to cancel reservation?').then(function () {\r\n            let isAll = cancellations.length === originalList.length\r\n            services.cancelBooking({ isAll, bookingNumber, cancellations }).then(res => {\r\n                if (isAll || originalList.filter(e => !e.isChecked).length === cancellations.length) {\r\n                    UIkit.modal.dialog(\r\n                        \"<p class='uk-modal-body' style='color:green;'>Successfully cancelled booking</p>\"\r\n                    )\r\n                    return window.location.href = \"/\"\r\n                }\r\n                window.location.href = path // DOESN'T RECOMMEND. USE AS TEMPORARY TO TRIGGER UPDATE AFTER CANCELLATION\r\n            })\r\n        }, function () {\r\n            // cancel confirmation\r\n            return\r\n        })\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        takeLatest(types.SIGN_UP, SIGN_UP),\r\n        takeLatest(types.SIGN_IN, SIGN_IN),\r\n        takeLatest(types.SIGN_OUT, SIGN_OUT),\r\n        takeLatest(types.SEND_RECOVERY_LINK, SEND_RECOVERY_LINK),\r\n        takeLatest(types.CONFIRM_RECOVERY_LINK, CONFIRM_RECOVERY_LINK),\r\n        takeLatest(types.UPDATE_PASSWORD, UPDATE_PASSWORD),\r\n        takeLatest(types.UPDATE_PREFERENCE, UPDATE_PREFERENCE),\r\n        takeLatest(types.USER_GET_FLIGHTS, USER_GET_FLIGHTS),\r\n        takeLatest(types.GET_BOOKING_DETAIL, GET_BOOKING_DETAIL),\r\n        takeEvery(types.UPDATE_BOOKING, UPDATE_BOOKING),\r\n        takeLatest(types.CANCEL_BOOKING, CANCEL_BOOKING)\r\n    ])\r\n}","import { format } from \"date-fns\";\r\n\r\nexport const flight = {\r\n    getSearchFlightCall: payload => {\r\n        let { isRoundTrip, searchInputs, dateInputs, maxPrice, numOfPassengers, sortById, flightClassId, departTimeId, arriveTimeId } = payload\r\n        let fromDate = format(dateInputs.fromDate, \"yyyy/MM/dd\")\r\n        let reqConditions = \"\"\r\n        // roundtrip?\r\n        reqConditions += `roundtrip=${isRoundTrip ? \"y\" : \"n\"}&`\r\n        // from and to flights\r\n        reqConditions += `depart=${searchInputs.flightFrom}|${fromDate}|${departTimeId}&arrive=${searchInputs.flightTo}`\r\n        if (isRoundTrip) {\r\n            let toDate = format(dateInputs.toDate, \"yyyy/MM/dd\")\r\n            reqConditions += `|${toDate}|${arriveTimeId}`\r\n        }\r\n        reqConditions += `&fclass=${flightClassId}&max=${maxPrice}&passengers=${numOfPassengers}&sort=${sortById}`\r\n        return reqConditions\r\n    },\r\n}","import { all, takeEvery, takeLatest, call, put } from 'redux-saga/effects'\r\nimport types from '../types';\r\nimport { flight } from 'apis/builder'\r\nimport services from 'apis/services'\r\nimport UIkit from 'uikit'\r\nimport searchSession from \"sessions/searchSession\"\r\n\r\nfunction* APPLY_SEARCH({ inputs }) {\r\n    let payload = inputs\r\n    let isReload = false\r\n    try {\r\n        if (!payload) { // case when user refresh Booking page at current step: Select Ticket for reservation\r\n            isReload = true // to prevent navigate to next step in booking\r\n            payload = {\r\n                isRoundTrip: searchSession.get(\"isRoundTrip\"),\r\n                searchInputs: {\r\n                    flightFrom: searchSession.get(\"searchInputs\").flightFrom,\r\n                    flightTo: searchSession.get(\"searchInputs\").flightTo,\r\n                },\r\n                maxPrice: searchSession.get(\"maxPrice\"),\r\n                dateInputs: {\r\n                    fromDate: new Date(searchSession.get(\"dateInputs\").fromDate),\r\n                    toDate: new Date(searchSession.get(\"dateInputs\").toDate)\r\n                },\r\n                departTimeId: searchSession.get(\"departTimeId\"),\r\n                arriveTimeId: searchSession.get(\"arriveTimeId\"),\r\n                numOfPassengers: searchSession.get(\"numOfPassengers\"),\r\n                flightClassId: searchSession.get(\"flightClassId\"),\r\n                sortById: searchSession.get(\"sortById\"),\r\n            }\r\n        }\r\n        let requestCall = flight.getSearchFlightCall(payload)\r\n        let retPayload = yield call(services.searchFlight, requestCall)// ticketList = {departFlights, returnFlights}\r\n        yield put({\r\n            type: \"SET_APPLY_SEARCH\",\r\n            payload, // search parameters\r\n            ticketList: retPayload.data,\r\n            isReload\r\n        })\r\n    } catch (e) {\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    } finally {\r\n        payload = null\r\n    }\r\n}\r\n\r\nfunction* GO_SEARCH() {\r\n    yield put({\r\n        type: \"SET_GO_SEARCH\"\r\n    })\r\n}\r\n\r\nfunction* IS_NEXT_RESERVATION({ tripType, selected }) {\r\n    yield put({\r\n        type: \"SET_VALID_TO_RESERVATION\",\r\n        tripType,\r\n        selected\r\n    })\r\n}\r\n\r\nfunction* TO_RESERVATION() {\r\n    yield put({\r\n        type: \"SET_TO_RESERVATION\"\r\n    })\r\n}\r\n\r\nfunction* FINALIZE_BOOKING({ payload }) {\r\n    try {\r\n        yield call(services.finalizeBooking, payload)\r\n        yield put({\r\n            type: \"SET_FINALIZE_BOOKING\"\r\n        })\r\n        UIkit.modal.dialog(\r\n            \"<p class='uk-modal-body' style='color:green;'>Thanks for choosing our flight service</p>\"\r\n        )\r\n        window.location.href = \"/\"\r\n    } catch (e) {\r\n        console.log(e)\r\n        UIkit.notification(e.message, { status: 'danger', timeout: 2000 })\r\n    }\r\n}\r\n\r\nexport default function* bookingSaga() {\r\n    yield all([\r\n        takeLatest(types.APPLY_SEARCH, APPLY_SEARCH),\r\n        takeLatest(types.GO_SEARCH, GO_SEARCH),\r\n        takeEvery(types.IS_NEXT_RESERVATION, IS_NEXT_RESERVATION),\r\n        takeLatest(types.TO_RESERVATION, TO_RESERVATION),\r\n        takeLatest(types.FINALIZE_BOOKING, FINALIZE_BOOKING)\r\n    ])\r\n}","import { all, takeLatest, call, put } from 'redux-saga/effects'\r\nimport types from '../types';\r\nimport services from \"apis/services\"\r\n\r\nfunction* GET_AIRPORTS() {\r\n    try {\r\n        let list = yield call(services.getAirportList)\r\n        let airportList = []\r\n        list.data.map(e => {\r\n            return airportList.push(`${e.name}, ${e.code} (${e.city}, ${e.state})`)\r\n        })\r\n        yield put({\r\n            type: \"SET_AIRPORTS\",\r\n            airportList\r\n        })\r\n    } catch (e) {\r\n        alert(e.message)\r\n    }\r\n}\r\n\r\nexport default function* airportSaga() {\r\n    yield all([\r\n        takeLatest(types.GET_AIRPORTS, GET_AIRPORTS)\r\n    ])\r\n}","import { all } from 'redux-saga/effects'\r\n\r\nimport backgroundSaga from './sagas/backgroundSaga'\r\nimport userSaga from './sagas/userSaga'\r\nimport bookingSaga from './sagas/bookingSaga'\r\nimport airportSaga from './sagas/airportSaga'\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([backgroundSaga(), userSaga(), bookingSaga(), airportSaga()])\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk'\r\nimport { logger } from 'redux-logger'\r\n\r\nimport rootReducer from './rootReducer'\r\nimport rootSaga from './rootSaga'\r\n\r\n// const initialState = {}\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middlewares = [thunk, sagaMiddleware]\r\n\r\nif (process.env.NODE_ENV === 'development' && true) {\r\n    middlewares.push(logger)\r\n}\r\n\r\n// const store = createStore(\r\n//     rootReducer,\r\n//     initialState,\r\n//     //applyMiddleware(...middleware)\r\n//     applyMiddleware(...middlewares)\r\n// )\r\nconst store = createStore(rootReducer, compose(applyMiddleware(...middlewares)))\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'stylesheets/index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>\r\n    , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport \"stylesheets/App.css\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { generateRoutes } from 'utils/generators'\r\nimport routes from \"models/routes\";\r\n\r\n\r\nexport default function App(props) {\r\n  const { authenticated } = useSelector(state => ({ authenticated: state.background.authenticated }))\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        authenticated !== null &&\r\n        <Switch>\r\n          {generateRoutes(routes, { authenticated, defaultAuthenticatedPath: \"/dashboard\" })}\r\n        </Switch>\r\n      }\r\n    </div>\r\n  );\r\n\r\n}\r\n"],"sourceRoot":""}